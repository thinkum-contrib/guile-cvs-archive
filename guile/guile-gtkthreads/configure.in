dnl Process this file with autoconf to produce configure.
AC_INIT(gtkthreads.c)
. $srcdir/GTKTHREADS-VERSION
AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)
AM_MAINTAINER_MODE

AC_PROG_CC
AC_PROG_CPP
AM_PROG_LIBTOOL

GUILE_FLAGS

CFLAGS="$CFLAGS $GUILE_CFLAGS"
LIBS="$GUILE_LDFLAGS $LIBS"

AC_MSG_CHECKING(that Guile is recent enough)
AC_EGREP_CPP(guile_is_recent_enough,
	     [#include <libguile/boolean.h>
	      #ifdef SCM_TRUE_P
	        guile_is_recent_enough
	      #endif
	     ],
	     [guile_recent_enough=yes],
	     [guile_recent_enough=no])
echo $guile_recent_enough
if test $guile_recent_enough = no; then
  AC_MSG_ERROR([
Your Guile is too old.
You need guile-core-1.3.5 >2000-03-29 or later.])
fi

## If we're using GCC, ask for aggressive warnings.
case "$GCC" in
  yes)
    ## We had -Wstrict-prototypes in here for a bit, but Guile does too
    ## much stuff with generic function pointers for that to really be
    ## less than exasperating.
    CFLAGS="$CFLAGS -Wall -Wpointer-arith -Wmissing-prototypes" ;;
esac

CFLAGS="`gtk-config --cflags` $CFLAGS"
LIBS="$LIBS `gtk-config --libs gthread`"

AC_CACHE_CHECK([for thread_create in GThreadFunctions],
	       ac_cv_struct_thread_create,
               [AC_TRY_COMPILE([#include <glib.h>],
                               [GThreadFunctions g; g.thread_create;],
			       ac_cv_struct_thread_create=yes,
			       ac_cv_struct_thread_create=no)])
if test $ac_cv_struct_thread_create = yes; then
  AC_DEFINE(HAVE_THREAD_CREATE)
fi

AC_OUTPUT(Makefile)

dnl Local Variables:
dnl comment-start: "dnl "
dnl comment-end: ""
dnl comment-start-skip: "\\bdnl\\b\\s *"
dnl End:
