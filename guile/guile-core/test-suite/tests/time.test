;;;; time.test --- test suite for Guile's time functions     -*- scheme -*-
;;;; Jim Blandy <jimb@red-bean.com> --- June 1999
;;;;
;;;; 	Copyright (C) 1999, 2004, 2005 Free Software Foundation, Inc.
;;;; 
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2, or (at your option)
;;;; any later version.
;;;; 
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;; 
;;;; You should have received a copy of the GNU General Public License
;;;; along with this software; see the file COPYING.  If not, write to
;;;; the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
;;;; Boston, MA 02110-1301 USA

(use-modules (test-suite lib)
	     (ice-9 regex))

;;;
;;; strftime
;;;

;; Note we must force isdst to get the ZOW zone name out of %Z on HP-UX.
;; If localtime is in daylight savings then it will decide there's no
;; daylight savings zone name for the fake ZOW, and come back empty.
;;
;;
;; This test is disabled because on NetBSD %Z doesn't look at the tm_zone
;; field in struct tm passed by guile.  That behaviour is reasonable enough
;; since that field is not in C99 so a C99 program won't know it has to be
;; set.  For the details on that see
;;
;;     http://www.netbsd.org/cgi-bin/query-pr-single.pl?number=21722
;;
;; Not sure what to do about this in guile, it'd be nice for %Z to look at
;; tm:zone everywhere.
;;
;;
;; (pass-if "strftime %Z doesn't return garbage"
;; 	 (let ((t (localtime (current-time))))
;; 	   (set-tm:zone t "ZOW")
;; 	   (set-tm:isdst t 0)
;; 	   (string=? (strftime "%Z" t)
;; 		     "ZOW")))
