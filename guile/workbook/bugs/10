summary: embedded libltdl masks system version unconditionally
reported: grib@linuxdevel.com, 2001-11-04

Bill Gribble sez:
> The guideline for when to use the convenience version of libltdl is
> this:
>
> > In general you can safely use the convenience library in
> > programs which don't depend on other libraries that might
> > use libltdl too.
>
> So guile's use of the convenience library embodies an assumption about
> programs which use guile: that they will not use libltdl except through
> guile's wrapper (dynamic-link and friends).
>
> It seems like this is a bad assumption for guile to make, since it is
> intended to be used as an extension language for many different kinds of
> programs and not to put a priori restrictions on what they can do.
> Especially when those restrictions are not documented.
>
> I would suggest that prior to the guile-1.6 release the use of the
> convenience ltdl library be removed, instead depending on an installed
> version of libltdl.

Lynn Winebarger <owinebar@free-expression.org> sez:
> My system mysteriously doesn't have a man page or info documentation about
> dlopen, but looking at the libtool docs tells me that the calling program
> has to provide a search function, and it appears there's no C library
> function to search ld.so.cache (and it may change from version to version
> of ld.so, so there's no way for you to use it directly).  Anyway, my
> expectation was bogus.  [ and setting LD_LIBRARY_PATH did work ]
>
> However, it does appear your search function still looks in
> /usr/local/share/guile/1.7.0 for shared libraries.  Wouldn't it be
> reasonably to have it search the libdir set at configure time instead or
> in addition to that directory?
>
> The documentation is a little vague on the library paths - that is,
> whether "library" refers to a library of scheme code, a compiled
> library, or both [ which may vary from context to context in the
> docs, I'm just pointing out it should be made clear ].
