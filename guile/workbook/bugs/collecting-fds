summary: The GC should run when file descriptors are tight
reported: prj@po.cwru.edu (Paul Jarc), 2003-10
affects: HEAD branch_release-1-6 branch_release-1-4

Marius Vollmer <mvo@zagadka.de> wrote:
> What about calling the gc automatically when an open failes with
> EMFILE or ENFILE in functions like scm_open_file?  Even better would
> be keeping a running total like scm_mallocated to run the gc well
> before fds are exhausted, but that is one thing more that needs to be
> carefully tuned...

Yes, it would be good to run the gc before we hit the limit, since
third-party extensions might do some opening themselves and may not
handle E[MN]FILE well.  OTOH, it's also good to explicitly close
descriptors - if close() reports an error, we want to see where it
came from.

Kevin:

Even getting close to ENFILE (ie. the system-wide limit) would be very
bad, it could easily cause all sorts of errors for daemons, other
users, etc.

Child processes would be another resource that could be counted to
provoke a gc, if a gc might wait some of them.  popen.scm does that
under a gc.  (Most systems used to have a fixed size process table,
with entries continuing to be used by zombies, until their parent
waited them.  Not sure if that's still the case these days.)
