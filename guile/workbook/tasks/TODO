- Guile 1.4.1
  +R write provisional guile.texi [ttn]
  + revise guile-snarf for upward compatibility [ttn]
  + back port ice-9/and-let*.scm naming fix [ttn]
  + write TODO summarizer [ttn]
  - include group membership attributes in guile-api.alist
    - make scan-api output express Scheme/C as a priori groups [ttn]
    - add filter hook to update-guile-api.alist [ttn]
    - write grouping attributes filter [ttn]
    - add doc/Makefile.am MAINTAINER_MODE rule for guile-api.alist
    - regen guile-api.alist all branches
  - update (gscripts) api-diff to be group-aware [ttn]
  + back port auto* tools versioning requirement fixes [ttn]
  + back port auto* tools usage [ttn]
  + write maintainer script dist-guile [ttn]
  - fix bugs


- Guile 1.6
  - document libtool conventions [rlb]
  + write workbook/build/maintainer-dirs.text [ttn]
  + write guile-core/am/maintainer-dirs [ttn]
  +R merge HEAD and branch_release-1-6 TODO files into this one [ttn]
  + write dist-hook to include TODO snapshot [ttn]
  + delete HEAD and branch_release-1-6 TODO files [ttn]
  + convert bug tracking/summarization process
    +R define bugs db format (see bugs/README) [mvo]
    + import current BUGS [mvo]
    + write stub for render-bugs [ttn]
    + write autogen.sh frag to call render-bugs to create BUGS [ttn]
    + delete HEAD and branch_release-1-6 BUGS files [ttn]
  +R factor guile-core/ administration files [ttn]
  +R factor RELEASE (prefer 1-6) into build/release.text [ttn]
  + show news on guile webpage [ttn]
  - write build/bugs-triage.text [ttn]
  + complete build/stability.text [ttn]
  - make sure all bugs have required headers
  - fix bugs


- Eventually
  - scan ideas web page and link to implementations
    - "find"
    - determine others
  - move ideas web page data into workbook/ and generate the page
  + write ice-9/gap-buffer.scm [ttn]
  - write scripts/read-rfc822.scm [ttn]
  - write modules/arch-survey.text
  - use autoconf vars abs_top_* vars (but not w/ autoconf 2.53)
  - write render-bugs, add to mscripts or guile-tools
  - scan mailing list archives for bugs and add them
    + subject: Guile fails tests on Tru64 4.0F [ttn]
    + subject: failed backtrace [ttn]
    + subject: All thread blocked on (accept socket) [ttn]
    + subject: avoid potential overflow in complex division [ttn]
    - by date
      - 2000-06 through 2001-06
      - 2001-07 through 2001-09 [ttn]
      - 2001-10 through 2001-12
      - 2002-01
      - 2002-02
      - 2002-03
      - 2002-04
  - write why-not-release? scanner
  - forward port guile-1.6.x stuff
    - guile-snarf and docs
    - determine rest of list
  - write 1.4-1.6 compatibility header
  - determine/document policy on how/why/when of removing things
  - extend render-bugs to harvest (and run?) test cases
  - fix signal-handling + threading
    - remove GUILE_OLD_ASYNC_CLICK and friends
  - implement and integrate generational garbage collection
  - add POSIX thread support
  - factor thread support out of libguile
  - protect common resources using mutecis from the new interface
  - remove the dynamic roots
  - revise the fluid implementation
  - implement the GC thread synchronization (all threads: go to sleep!)
  - implementing the libguileposix threads glue library
  - write Orbit CORBA interface
  - use environments to implement low-level module obarray
  - specify role of shared object libraries in module system
  - move sort.c, random.c, etc out of libguile
  - include malloc debugging code in an optional file in libguile
  - fix looking up procedure names in environment in backtraces
  - implement srcprops using double cells
  - use "real" procprops
  - add facilities for easily debugging Scheme programs from Emacs
  - write good interface to Tk
  - write translators for additional languages
  - make GDB work with Guile
  - use the SCM trick of tagging environments with immediates (see m_letrec1)
    to convert source correctly in unmemocopy
  - eliminate argument checking for closures
  - Implement a thread-safe alternative to SCM's environment caches
  - develop better representation for GOOPS objects
  - rewrite GOOPS method cache management in C
  - rewrite GOOPS macros (define-class et al) in C
  - define GOOPS C API
  - make all syscalls block only the current thread, using scm_internal_select.
  - unify SRFI-4 and the existing uniform array code
  - rename ice-9 to something more obvious
  - implement implicitly shared substrings (thread-safe, copy on write).  In
    this context, the concept of read-only-strings might be re-introduced to
    implement the symbol->string semantics of R5RS.
  - implement internationalized strings
  - revise the uniform vector implementation
  - make the set of error signalling functions more consistent
  - Fix bug reported by Sven.Hartrumpf@fernuni-hagen.de 2001-08-31:
    (debug-disable 'debug) has no effect if it is the first form in ~/.guile.
  - provide a non-extended implementation of 'define' for the R5RS module.
  - write instructions on how to build Guile for distributors
  - publish (automated) build status matrix
  - write tests for each bug
  - test elisp translator against rfc822.el
  - provide doc snarfing
    - rationalize / integrate various scripts
    - document
    - re-enable install of constituent programs
  - make sure all *.scm have some commentary (including manual ref)
    - ice-9
    - oop
    + srfi [ttn]
    - lang
  - add DLL support [ela]
  - write emacs/patch.el [ttn]
    + outgoing
    - incoming
  - Compile with --enable-error-on-warning without failure.  Requires a
    number of fixes, including num2integral.i.c and on some platforms
    gc_os_dep.c.  Also SCM_FIXABLE etc. will produce unavoidable
    warnings on some platforms with some vars as written now.  i.e. on
    alphas, SCM_FIXABLE(some_int) is always true.  We need more
    conditional compilation or similar.
  - remove deprecated function "feature?".
  - remove deprecated macros SCM_NEWCELL and SCM_NEWCELL2 together with
    their support staffing scm_deprecated_newcell,
    scm_deprecated_newcell2, scm_tc16_allocated, mark_allocated.
  - remove deprecated functions scm_must_malloc,
    scm_must_realloc, scm_must_free, scm_done_malloc, scm_done_free,
    scm_must_strndup, scm_must_strdup.
  - change return types of smob and port free functions to void
  - fix bugs
    - (debug-disable 'debug) has no effect if first form in ~/.guile
    - embedded libltdl masks system version unconditionally
    - (ice-9 optargs) #:rest arg polluted by keys/values
    - goops class redefinition not signalling "no such accessor" error
    - incorrect error reporting after stack overflow
    - strange gc loop caused by trap misuse
    - (expt 0 0) -> 0
    - documentation mirroring not complete
    - design decisions not recorded
    - named-let transform evaluates initvalue in the wrong scope
    - uniform vector read-hash "e" clashes w/ exactness specification
    - exactness prefix doesn't do nothing gracefully
    - readline configuration anomolies not handled gracefully
    - install requires makeinfo
    - sibling threads not infinite looping
    - we need to properly instruct distributors how to package Guile
    - dynamic-link can not request a specific interface number
    - make check fails on Tru64 4.0F
    - local-eval error bactrace segfaults
    - guile-www does not support ssl
    - all threads blocked on (accept socket)
    - complex division sometimes overflows
    - 'bound?' from (ice-9 optargs) has been removed but is useful.
    - guile-snarf writes to $srcdir, which is not kosher
    - interaction of dynamic-wind, call/cc, exceptions and/or handler causes segfault
    - issues to resolve while adding gmp bignums
    - possible goops class redefinition bug
    - primitive thunk as goops #:init-thunk causes segv
    - ipv6 in guile 1.5.6: configure bug and fix for NetBSD-1.5.2
    - Loading a SLIB module with require does not shadow primitives
    - SRFI-13 string-tokenize is wrong
    - unhandled keywords to goops "make" (etc) should signal errors



        Local Variables:
        mode: outline
        outline-regexp: "\\([ ][ ]\\)*[-+]"
        End:


[TODO ends here]
