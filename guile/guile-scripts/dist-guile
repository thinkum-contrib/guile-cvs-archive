#!/bin/sh -x
# usage: dist-guile TAG
#
# This must be run in a branched top-level guile-core dir (so
# that CVS/Tag looks something like: branch_release-X-Y).
#
# Description:
# - check all files under cwd are unmodified (sync'ed w/ cvs repo)
# - sh -x autogen.sh
# - create distdir ../dist.$branch
# - in $distdir do configure, make, make check
# - in $distdir do make distcheck
# - cvs tag TAG         (where TAG is $1)
#
# TODO: Handle non-standard workbook location.
#       Support skipping steps, for restarts.

set -e

me=`basename $0`
startdir=`pwd`
branch=""
distdir=""
tag=$1          # see $workbook/build/dist-files/HACKING

if [ x"$tag" = x ] ; then
    echo Usage: $me TAG
    echo where TAG is something like release_1-4-1
    exit 1
fi

trap "cd $startdir ; cvs tag -d TEMP-$tag" 0 1 2 15

set_branch_and_derived_vars ()
{
if [ -f pre-inst-guile.in -a -d CVS -a -f CVS/Tag ] ; then
    branch=`sed s/^.//g CVS/Tag`
else
    echo $me: "ERROR: Need to be in (branched) guile-core so"
    echo $me: "       that CVS/Tag file can be found"
    exit 1
fi

# must be peer w/ startdir
distdir="../dist.$branch"

}

check_unmodified_tag_and_autogen ()
{
cvs tag -c TEMP-$tag && sh -x autogen.sh
}

cd_distdir_configure_build_and_check ()
{
test -d $distdir || mkdir $distdir
cd $distdir
$startdir/configure --enable-maintainer-mode --with-threads
make
make check
}

cd_distdir_and_make_distcheck ()
{
cd $distdir
make distcheck
}

everything_works_so_tag_it_for_real ()
{
cd $startdir
cvs tag $tag
}

# todo: support command-line options to skip any of these steps
set_branch_and_derived_vars
check_unmodified_tag_and_autogen
cd_distdir_configure_build_and_check
cd_distdir_and_make_distcheck
everything_works_so_tag_it_for_real     # do last

# dist-guile ends here
