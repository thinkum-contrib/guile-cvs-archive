;; This file was automatically generated by make-gtk-proto 
;; Fri Apr 28 19:04:51 CEST 2000 
;; enums=GtkTroughType,GtkFontMetricType,GdkByteOrder,GtkUpdateType,GtkCTreePos,GdkFontType,GtkSortType,GtkSelectionMode,GtkCTreeLineStyle,GtkPathType,GtkToolbarSpaceStyle,GdkInputSource,GdkJoinStyle,GtkScrollType,GtkPathPriorityType,GdkCapStyle,GdkPropertyState,GtkRcTokenType,GdkVisibilityState,GtkToolbarChildType,GtkProgressBarStyle,GtkSpinType,GtkJustification,GdkWindowClass,GtkFontFilterType,GtkSubmenuDirection,GtkCellType,GdkInputMode,GtkSideType,GtkCurveType,GtkVisibility,GdkWindowType,GtkCTreeExpansionType,GdkOverlapType,GtkOrientation,GtkArrowType,GtkMatchType,GdkStatus,GdkEventType,GdkSelectionType,GtkWindowType,GtkAnchorType,GtkDirectionType,GtkStateType,GtkPreviewType,GtkReliefStyle,GtkShadowType,GdkRgbDither,GtkMenuFactoryType,GtkFundamentalType,GdkExtensionMode,GdkAxisUse,GtkPolicyType,GdkImageType,GdkSelection,GtkProgressBarOrientation,GdkFilterReturn,GdkTarget,GdkSubwindowMode,GtkPositionType,GtkResizeMode,GdkFill,GtkMenuDirectionType,GdkColorContextMode,GtkCTreeExpanderStyle,GdkCrossingMode,GdkDragProtocol,GtkPackType,GtkToolbarStyle,GtkMetricType,GdkVisualType,GtkSpinButtonUpdatePolicy,GdkLineStyle,GdkNotifyType,GtkCornerType,GtkWindowPosition,GtkCListDragPos,GdkFillRule,GtkTreeViewMode,GdkCursorType,GdkPropMode,GtkButtonBoxStyle,GdkFunction,GtkSubmenuPlacement
;; flags=GdkWMFunction,GtkButtonAction,GdkWMDecoration,GtkCalendarDisplayOptions,GdkEventMask,GdkModifierType,GtkAttachOptions,GtkDebugFlag,GtkRcFlags,GtkPackerOptions,GtkObjectFlags,GdkICAttributesType,GtkAccelFlags,GdkInputCondition,GtkArgFlags,GtkPrivateFlags,GtkDestDefaults,GdkDragAction,GdkWindowHints,GtkWidgetFlags,GdkWindowAttributesType,GtkTargetFlags,GtkSignalRunType,GdkGCValuesMask,GdkIMStyle,GtkFontType
;; 
;; From file gdk.c 
;; 
(define-extern :void gdk_exit :int)
(define-extern :void gdk_set_use_xshm :boolean)
(define-extern :boolean gdk_get_use_xshm )
(define-extern :int gdk_time_get )
(define-extern :int gdk_timer_get )
(define-extern :void gdk_timer_set :int)
(define-extern :void gdk_timer_enable )
(define-extern :void gdk_timer_disable )
(define-extern :int gdk_pointer_grab :GdkWindow :int :int :GdkWindow :GdkCursor :int)
(define-extern :void gdk_pointer_ungrab :int)
(define-extern :boolean gdk_pointer_is_grabbed )
(define-extern :int gdk_keyboard_grab :GdkWindow :int :int)
(define-extern :void gdk_keyboard_ungrab :int)
(define-extern :int gdk_screen_width )
(define-extern :int gdk_screen_height )
(define-extern :int gdk_screen_width_mm )
(define-extern :int gdk_screen_height_mm )
(define-extern :void gdk_set_sm_client_id :string)
(define-extern :void gdk_key_repeat_disable )
(define-extern :void gdk_key_repeat_restore )
(define-extern :void gdk_beep )
(define-extern :string gdk_get_display )
(define-extern :void gdk_error_trap_push )
(define-extern :int gdk_error_trap_pop )
(define-extern :string gdk_keyval_name :int)
(define-extern :int gdk_keyval_from_name :string)
(define-extern :int gdk_keyval_to_upper :int)
(define-extern :int gdk_keyval_to_lower :int)
(define-extern :boolean gdk_keyval_is_upper :int)
(define-extern :boolean gdk_keyval_is_lower :int)
(define-extern :void gdk_threads_enter )
(define-extern :void gdk_threads_leave )
;; (define-extern :boolean gdk_init_check :?int*? :?char***?)
;; (define-extern :void gdk_init :?int*? :?char***?)
;; (define-extern :int gdk_send_xevent :?Window? :boolean :int :?XEvent*?)
;; 
;; From file gdkcc.c 
;; 
;; (define-extern :?GdkColorContext*? gdk_color_context_new :GdkVisual :GdkColormap)
;; (define-extern :?GdkColorContext*? gdk_color_context_new_mono :GdkVisual :GdkColormap)
;; (define-extern :void gdk_color_context_free :?GdkColorContext*?)
;; (define-extern :int gdk_color_context_get_pixel :?GdkColorContext*? :int :int :int :?gint*?)
;; (define-extern :void gdk_color_context_get_pixels :?GdkColorContext*? :?gushort*? :?gushort*? :?gushort*? :int :?gulong*? :?gint*?)
;; (define-extern :void gdk_color_context_get_pixels_incremental :?GdkColorContext*? :?gushort*? :?gushort*? :?gushort*? :int :?gint*? :?gulong*? :?gint*?)
;; (define-extern :int gdk_color_context_query_color :?GdkColorContext*? :GdkColor)
;; (define-extern :int gdk_color_context_query_colors :?GdkColorContext*? :GdkColor :int)
;; (define-extern :int gdk_color_context_add_palette :?GdkColorContext*? :GdkColor :int)
;; (define-extern :void gdk_color_context_init_dither :?GdkColorContext*?)
;; (define-extern :void gdk_color_context_free_dither :?GdkColorContext*?)
;; (define-extern :int gdk_color_context_get_pixel_from_palette :?GdkColorContext*? :?gushort*? :?gushort*? :?gushort*? :?gint*?)
;; (define-extern :int gdk_color_context_get_index_from_palette :?GdkColorContext*? :?gint*? :?gint*? :?gint*? :?gint*?)
;; 
;; From file gdkcolor.c 
;; 
(define-extern :GdkColormap gdk_colormap_new :GdkVisual :boolean)
(define-extern :GdkColormap gdk_colormap_ref :GdkColormap)
(define-extern :void gdk_colormap_unref :GdkColormap)
(define-extern :GdkVisual gdk_colormap_get_visual :GdkColormap)
(define-extern :void gdk_colormap_sync :GdkColormap :boolean)
(define-extern :GdkColormap gdk_colormap_get_system )
(define-extern :int gdk_colormap_get_system_size )
(define-extern :void gdk_colormap_change :GdkColormap :int)
(define-extern :void gdk_colors_store :GdkColormap :GdkColor :int)
(define-extern :GdkColor gdk_color_copy :GdkColor)
(define-extern :void gdk_color_free :GdkColor)
(define-extern :boolean gdk_color_white :GdkColormap :GdkColor)
(define-extern :boolean gdk_color_black :GdkColormap :GdkColor)
(define-extern :boolean gdk_color_parse :string :GdkColor)
(define-extern :void gdk_colormap_free_colors :GdkColormap :GdkColor :int)
(define-extern :boolean gdk_colormap_alloc_color :GdkColormap :GdkColor :boolean :boolean)
(define-extern :boolean gdk_color_alloc :GdkColormap :GdkColor)
(define-extern :boolean gdk_color_change :GdkColormap :GdkColor)
(define-extern :int gdk_color_hash :GdkColor :GdkColor)
(define-extern :boolean gdk_color_equal :GdkColor :GdkColor)
;; (define-extern :boolean gdk_colors_alloc :GdkColormap :boolean :?gulong*? :int :?gulong*? :int)
;; (define-extern :void gdk_colors_free :GdkColormap :?gulong*? :int :int)
;; (define-extern :int gdk_colormap_alloc_colors :GdkColormap :GdkColor :int :boolean :boolean :?gboolean*?)
;; (define-extern :GdkColormap gdkx_colormap_get :?Colormap?)
;; (define-extern :GdkColormap gdk_colormap_lookup :?Colormap?)
;; 
;; From file gdkcursor.c 
;; 
(define-extern :GdkCursor gdk_cursor_new :int)
(define-extern :GdkCursor gdk_cursor_new_from_pixmap :GdkWindow :GdkWindow :GdkColor :GdkColor :int :int)
(define-extern :void gdk_cursor_destroy :GdkCursor)
;; 
;; From file gdkdnd.c 
;; 
(define-extern :GdkDragContext gdk_drag_context_new )
(define-extern :void gdk_drag_context_ref :GdkDragContext)
(define-extern :void gdk_drag_context_unref :GdkDragContext)
(define-extern :int motif_top_level_leave :GdkEvent :int :int)
(define-extern :int motif_motion :GdkEvent :int :int :int :int)
(define-extern :int motif_operation_changed :GdkEvent :int :int)
(define-extern :int motif_drop_start :GdkEvent :int :int :int :int :int :int)
(define-extern :int motif_drag_status :GdkEvent :int :int)
(define-extern :void gdk_dnd_init )
(define-extern :boolean gdk_drag_motion :GdkDragContext :GdkWindow :int :int :int :int :int :int)
(define-extern :void gdk_drag_drop :GdkDragContext :int)
(define-extern :void gdk_drag_abort :GdkDragContext :int)
(define-extern :void gdk_drag_status :GdkDragContext :int :int)
(define-extern :void gdk_drop_reply :GdkDragContext :boolean :int)
(define-extern :void gdk_drop_finish :GdkDragContext :boolean :int)
(define-extern :void gdk_window_register_dnd :GdkWindow)
(define-extern :GdkAtom gdk_drag_get_selection :GdkDragContext)
;; (define-extern :int motif_drag_window_filter :?GdkXEvent*? :GdkEvent :pointer)
;; (define-extern :?Window? motif_find_drag_window :boolean)
;; (define-extern :int motif_check_dest :?Window?)
;; (define-extern :int motif_dnd_filter :?GdkXEvent*? :GdkEvent :pointer)
;; (define-extern :int xdnd_send_xevent :?Window? :boolean :?XEvent*?)
;; (define-extern :GdkDragContext gdk_drag_begin :GdkWindow :?GList*?)
;; (define-extern :int gdk_drag_get_protocol :int :?GdkDragProtocol*?)
;; (define-extern :void gdk_drag_find_window :GdkDragContext :GdkWindow :int :int :?GdkWindow**? :?GdkDragProtocol*?)
;; 
;; From file gdkdraw.c 
;; 
(define-extern :void gdk_draw_point :GdkWindow :GdkGC :int :int)
(define-extern :void gdk_draw_line :GdkWindow :GdkGC :int :int :int :int)
(define-extern :void gdk_draw_rectangle :GdkWindow :GdkGC :int :int :int :int :int)
(define-extern :void gdk_draw_arc :GdkWindow :GdkGC :int :int :int :int :int :int :int)
(define-extern :void gdk_draw_string :GdkWindow :GdkFont :GdkGC :int :int :string)
(define-extern :void gdk_draw_text :GdkWindow :GdkFont :GdkGC :int :int :string :int)
(define-extern :void gdk_draw_pixmap :GdkWindow :GdkGC :GdkWindow :int :int :int :int :int :int)
;; (define-extern :void gdk_draw_polygon :GdkWindow :GdkGC :int :?GdkPoint*? :int)
;; (define-extern :void gdk_draw_text_wc :GdkWindow :GdkFont :GdkGC :int :int :?GdkWChar*? :int)
;; (define-extern :void gdk_draw_image :GdkWindow :GdkGC :?GdkImage*? :int :int :int :int :int :int)
;; (define-extern :void gdk_draw_points :GdkWindow :GdkGC :?GdkPoint*? :int)
;; (define-extern :void gdk_draw_segments :GdkWindow :GdkGC :?GdkSegment*? :int)
;; (define-extern :void gdk_draw_lines :GdkWindow :GdkGC :?GdkPoint*? :int)
;; 
;; From file gdkevents.c 
;; 
(define-extern :void gdk_events_init )
(define-extern :boolean gdk_events_pending )
(define-extern :GdkEvent gdk_event_get_graphics_expose :GdkWindow)
(define-extern :GdkEvent gdk_event_get )
(define-extern :GdkEvent gdk_event_peek )
(define-extern :void gdk_event_put :GdkEvent)
(define-extern :GdkEvent gdk_event_copy :GdkEvent)
(define-extern :void gdk_event_free :GdkEvent)
(define-extern :int gdk_event_get_time :GdkEvent)
(define-extern :void gdk_set_show_events :boolean)
(define-extern :boolean gdk_get_show_events )
(define-extern :void gdk_input_remove :int)
(define-extern :boolean gdk_event_send_client_message :GdkEvent :int)
(define-extern :void gdk_event_send_clientmessage_toall :GdkEvent)
(define-extern :void gdk_flush )
;; (define-extern :void gdk_compress_exposures :?XEvent*? :GdkWindow)
;; (define-extern :void gdk_event_handler_set :?GdkEventFunc? :pointer :?GDestroyNotify?)
;; (define-extern :int gdk_input_add_full :int :int :?GdkInputFunction? :pointer :?GdkDestroyNotify?)
;; (define-extern :int gdk_input_add :int :int :?GdkInputFunction? :pointer)
;; (define-extern :void gdk_add_client_message_filter :GdkAtom :?GdkFilterFunc? :pointer)
;; (define-extern :int gdk_wm_protocols_filter :?GdkXEvent*? :GdkEvent :pointer)
;; (define-extern :boolean gdk_event_send_client_message_to_all_recurse :?XEvent*? :int :int)
;; 
;; From file gdkfont.c 
;; 
(define-extern :GdkFont gdk_font_load :string)
(define-extern :GdkFont gdk_fontset_load :string)
(define-extern :GdkFont gdk_font_ref :GdkFont)
(define-extern :void gdk_font_unref :GdkFont)
(define-extern :int gdk_font_id :GdkFont)
(define-extern :boolean gdk_font_equal :GdkFont :GdkFont)
(define-extern :int gdk_string_width :GdkFont :string)
(define-extern :int gdk_text_width :GdkFont :string :int)
(define-extern :int gdk_char_width :GdkFont :int)
(define-extern :int gdk_string_measure :GdkFont :string)
(define-extern :int gdk_text_measure :GdkFont :string :int)
(define-extern :int gdk_char_measure :GdkFont :int)
(define-extern :int gdk_string_height :GdkFont :string)
(define-extern :int gdk_text_height :GdkFont :string :int)
(define-extern :int gdk_char_height :GdkFont :int)
;; (define-extern :int gdk_text_width_wc :GdkFont :?GdkWChar*? :int)
;; (define-extern :int gdk_char_width_wc :GdkFont :?GdkWChar?)
;; (define-extern :void gdk_text_extents :GdkFont :string :int :?gint*? :?gint*? :?gint*? :?gint*? :?gint*?)
;; (define-extern :void gdk_text_extents_wc :GdkFont :?GdkWChar*? :int :?gint*? :?gint*? :?gint*? :?gint*? :?gint*?)
;; (define-extern :void gdk_string_extents :GdkFont :string :?gint*? :?gint*? :?gint*? :?gint*? :?gint*?)
;; 
;; From file gdkgc.c 
;; 
(define-extern :GdkGC gdk_gc_new :GdkWindow)
(define-extern :void gdk_gc_destroy :GdkGC)
(define-extern :GdkGC gdk_gc_ref :GdkGC)
(define-extern :void gdk_gc_unref :GdkGC)
(define-extern :void gdk_gc_set_foreground :GdkGC :GdkColor)
(define-extern :void gdk_gc_set_background :GdkGC :GdkColor)
(define-extern :void gdk_gc_set_font :GdkGC :GdkFont)
(define-extern :void gdk_gc_set_function :GdkGC :int)
(define-extern :void gdk_gc_set_fill :GdkGC :int)
(define-extern :void gdk_gc_set_tile :GdkGC :GdkWindow)
(define-extern :void gdk_gc_set_stipple :GdkGC :GdkWindow)
(define-extern :void gdk_gc_set_ts_origin :GdkGC :int :int)
(define-extern :void gdk_gc_set_clip_origin :GdkGC :int :int)
(define-extern :void gdk_gc_set_clip_mask :GdkGC :GdkWindow)
(define-extern :void gdk_gc_set_subwindow :GdkGC :int)
(define-extern :void gdk_gc_set_exposures :GdkGC :boolean)
(define-extern :void gdk_gc_set_line_attributes :GdkGC :int :int :int :int)
(define-extern :void gdk_gc_copy :GdkGC :GdkGC)
;; (define-extern :GdkGC gdk_gc_new_with_values :GdkWindow :?GdkGCValues*? :int)
;; (define-extern :void gdk_gc_get_values :GdkGC :?GdkGCValues*?)
;; (define-extern :void gdk_gc_set_clip_rectangle :GdkGC :?GdkRectangle*?)
;; (define-extern :void gdk_gc_set_clip_region :GdkGC :?GdkRegion*?)
;; 
;; From file gdkglobals.c 
;; 
;; 
;; From file gdkim.c 
;; 
(define-extern :string gdk_set_locale )
(define-extern :void gdk_ic_cleanup )
;; (define-extern :void gdk_im_begin :?GdkIC*? :GdkWindow)
;; (define-extern :void gdk_im_end )
;; (define-extern :int gdk_im_decide_style :int)
;; (define-extern :int gdk_im_set_best_style :int)
;; (define-extern :int gdk_im_open )
;; (define-extern :void gdk_im_close )
;; (define-extern :boolean gdk_im_ready )
;; (define-extern :?GdkIC*? gdk_ic_new :?GdkICAttr*? :int)
;; (define-extern :void gdk_ic_destroy :?GdkIC*?)
;; (define-extern :int gdk_ic_get_style :?GdkIC*?)
;; (define-extern :?GdkICAttr*? gdk_ic_attr_new )
;; (define-extern :void gdk_ic_attr_destroy :?GdkICAttr*?)
;; (define-extern :int gdk_ic_set_attr :?GdkIC*? :?GdkICAttr*? :int)
;; (define-extern :int gdk_ic_get_attr :?GdkIC*? :?GdkICAttr*? :int)
;; (define-extern :int gdk_ic_get_events :?GdkIC*?)
;; (define-extern :void gdk_im_begin :?GdkIC*? :GdkWindow)
;; (define-extern :void gdk_im_end )
;; (define-extern :int gdk_im_decide_style :int)
;; (define-extern :int gdk_im_set_best_style :int)
;; (define-extern :int gdk_im_ready )
;; (define-extern :?GdkIC*? gdk_ic_new :?GdkICAttr*? :int)
;; (define-extern :void gdk_ic_destroy :?GdkIC*?)
;; (define-extern :int gdk_ic_get_style :?GdkIC*?)
;; (define-extern :int gdk_ic_set_attr :?GdkIC*? :?GdkICAttr*? :int)
;; (define-extern :int gdk_ic_get_attr :?GdkIC*? :?GdkICAttr*? :int)
;; (define-extern :int gdk_ic_get_events :?GdkIC*?)
;; (define-extern :string gdk_wcstombs :?GdkWChar*?)
;; (define-extern :int gdk_mbstowcs :?GdkWChar*? :string :int)
;; 
;; From file gdkimage.c 
;; 
(define-extern :void gdk_image_exit )
(define-extern :void gdk_image_init )
;; (define-extern :?GdkImage*? gdk_image_new_bitmap :GdkVisual :pointer :int :int)
;; (define-extern :?GdkImage*? gdk_image_new :int :GdkVisual :int :int)
;; (define-extern :?GdkImage*? gdk_image_get :GdkWindow :int :int :int :int)
;; (define-extern :int gdk_image_get_pixel :?GdkImage*? :int :int)
;; (define-extern :void gdk_image_put_pixel :?GdkImage*? :int :int :int)
;; (define-extern :void gdk_image_destroy :?GdkImage*?)
;; 
;; From file gdkinput.c 
;; 
(define-extern :void gdk_input_set_source :int :int)
(define-extern :boolean gdk_input_set_mode :int :int)
(define-extern :void gdk_input_set_key :int :int :int :int)
(define-extern :void gdk_input_set_extension_events :GdkWindow :int :int)
(define-extern :void gdk_input_window_destroy :GdkWindow)
(define-extern :void gdk_input_exit )
;; (define-extern :?GList*? gdk_input_list_devices )
;; (define-extern :void gdk_input_set_axes :int :?GdkAxisUse*?)
;; (define-extern :?GdkTimeCoord*? gdk_input_motion_events :GdkWindow :int :int :int :?gint*?)
;; (define-extern :void gdk_input_window_get_pointer :GdkWindow :int :?gdouble*? :?gdouble*? :?gdouble*? :?gdouble*? :?gdouble*? :?GdkModifierType*?)
;; 
;; From file gdkpixmap.c 
;; 
(define-extern :GdkWindow gdk_pixmap_new :GdkWindow :int :int :int)
(define-extern :GdkWindow gdk_bitmap_create_from_data :GdkWindow :string :int :int)
(define-extern :GdkWindow gdk_pixmap_create_from_data :GdkWindow :string :int :int :int :GdkColor :GdkColor)
(define-extern :GdkWindow gdk_pixmap_foreign_new :int)
(define-extern :GdkWindow gdk_pixmap_ref :GdkWindow)
(define-extern :void gdk_pixmap_unref :GdkWindow)
(define-extern :GdkWindow gdk_bitmap_ref :GdkWindow)
(define-extern :void gdk_bitmap_unref :GdkWindow)
;; (define-extern :GdkWindow gdk_pixmap_colormap_create_from_xpm :GdkWindow :GdkColormap :?GdkBitmap**? :GdkColor :string)
;; (define-extern :GdkWindow gdk_pixmap_create_from_xpm :GdkWindow :?GdkBitmap**? :GdkColor :string)
;; (define-extern :GdkWindow gdk_pixmap_colormap_create_from_xpm_d :GdkWindow :GdkColormap :?GdkBitmap**? :GdkColor :?gchar**?)
;; (define-extern :GdkWindow gdk_pixmap_create_from_xpm_d :GdkWindow :?GdkBitmap**? :GdkColor :?gchar**?)
;; 
;; From file gdkproperty.c 
;; 
(define-extern :GdkAtom gdk_atom_intern :string :int)
(define-extern :string gdk_atom_name :GdkAtom)
(define-extern :void gdk_property_change :GdkWindow :GdkAtom :GdkAtom :int :int :string :int)
(define-extern :void gdk_property_delete :GdkWindow :GdkAtom)
;; (define-extern :boolean gdk_property_get :GdkWindow :GdkAtom :GdkAtom :int :int :int :?GdkAtom*? :?gint*? :?gint*? :?guchar**?)
;; 
;; From file gdkrectangle.c 
;; 
;; (define-extern :void gdk_rectangle_union :?GdkRectangle*? :?GdkRectangle*? :?GdkRectangle*?)
;; (define-extern :boolean gdk_rectangle_intersect :?GdkRectangle*? :?GdkRectangle*? :?GdkRectangle*?)
;; 
;; From file gdkregion.c 
;; 
;; (define-extern :?GdkRegion*? gdk_region_new )
;; (define-extern :void gdk_region_destroy :?GdkRegion*?)
;; (define-extern :boolean gdk_region_empty :?GdkRegion*?)
;; (define-extern :boolean gdk_region_equal :?GdkRegion*? :?GdkRegion*?)
;; (define-extern :void gdk_region_get_clipbox :?GdkRegion*? :?GdkRectangle*?)
;; (define-extern :boolean gdk_region_point_in :?GdkRegion*? :int :int)
;; (define-extern :int gdk_region_rect_in :?GdkRegion*? :?GdkRectangle*?)
;; (define-extern :?GdkRegion*? gdk_region_polygon :?GdkPoint*? :int :int)
;; (define-extern :void gdk_region_offset :?GdkRegion*? :int :int)
;; (define-extern :void gdk_region_shrink :?GdkRegion*? :int :int)
;; (define-extern :?GdkRegion*? gdk_region_union_with_rect :?GdkRegion*? :?GdkRectangle*?)
;; (define-extern :?GdkRegion*? gdk_regions_intersect :?GdkRegion*? :?GdkRegion*?)
;; (define-extern :?GdkRegion*? gdk_regions_union :?GdkRegion*? :?GdkRegion*?)
;; (define-extern :?GdkRegion*? gdk_regions_subtract :?GdkRegion*? :?GdkRegion*?)
;; (define-extern :?GdkRegion*? gdk_regions_xor :?GdkRegion*? :?GdkRegion*?)
;; 
;; From file gdkrgb.c 
;; 
(define-extern :void gdk_rgb_set_verbose :boolean)
(define-extern :void gdk_rgb_set_install :boolean)
(define-extern :void gdk_rgb_set_min_colors :int)
(define-extern :void gdk_rgb_init )
(define-extern :int gdk_rgb_xpixel_from_rgb :int)
(define-extern :void gdk_rgb_gc_set_foreground :GdkGC :int)
(define-extern :void gdk_rgb_gc_set_background :GdkGC :int)
(define-extern :void gdk_draw_rgb_image :GdkWindow :GdkGC :int :int :int :int :int :string :int)
(define-extern :void gdk_draw_rgb_image_dithalign :GdkWindow :GdkGC :int :int :int :int :int :string :int :int :int)
(define-extern :void gdk_draw_rgb_32_image :GdkWindow :GdkGC :int :int :int :int :int :string :int)
(define-extern :void gdk_draw_gray_image :GdkWindow :GdkGC :int :int :int :int :int :string :int)
(define-extern :boolean gdk_rgb_ditherable )
(define-extern :GdkColormap gdk_rgb_get_cmap )
(define-extern :GdkVisual gdk_rgb_get_visual )
;; (define-extern :?GdkRgbCmap*? gdk_rgb_cmap_new :?guint32*? :int)
;; (define-extern :void gdk_rgb_cmap_free :?GdkRgbCmap*?)
;; (define-extern :void gdk_draw_indexed_image :GdkWindow :GdkGC :int :int :int :int :int :string :int :?GdkRgbCmap*?)
;; 
;; From file gdkselection.c 
;; 
(define-extern :boolean gdk_selection_owner_set :GdkWindow :GdkAtom :int :int)
(define-extern :GdkWindow gdk_selection_owner_get :GdkAtom)
(define-extern :void gdk_selection_convert :GdkWindow :GdkAtom :GdkAtom :int)
(define-extern :void gdk_selection_send_notify :int :GdkAtom :GdkAtom :GdkAtom :int)
(define-extern :void gdk_free_compound_text :string)
;; (define-extern :int gdk_selection_property_get :GdkWindow :?guchar**? :?GdkAtom*? :?gint*?)
;; (define-extern :int gdk_text_property_to_text_list :GdkAtom :int :string :int :?gchar***?)
;; (define-extern :void gdk_free_text_list :?gchar**?)
;; (define-extern :int gdk_string_to_compound_text :string :?GdkAtom*? :?gint*? :?guchar**? :?gint*?)
;; 
;; From file gdkvisual.c 
;; 
(define-extern :void gdk_visual_init )
(define-extern :GdkVisual gdk_visual_ref :GdkVisual)
(define-extern :void gdk_visual_unref :GdkVisual)
(define-extern :int gdk_visual_get_best_depth )
(define-extern :int gdk_visual_get_best_type )
(define-extern :GdkVisual gdk_visual_get_system )
(define-extern :GdkVisual gdk_visual_get_best )
(define-extern :GdkVisual gdk_visual_get_best_with_depth :int)
(define-extern :GdkVisual gdk_visual_get_best_with_type :int)
(define-extern :GdkVisual gdk_visual_get_best_with_both :int :int)
;; (define-extern :void gdk_query_depths :?gint**? :?gint*?)
;; (define-extern :void gdk_query_visual_types :?GdkVisualType**? :?gint*?)
;; (define-extern :?GList*? gdk_list_visuals )
;; (define-extern :GdkVisual gdk_visual_lookup :?Visual*?)
;; (define-extern :GdkVisual gdkx_visual_get :?VisualID?)
;; 
;; From file gdkwindow.c 
;; 
(define-extern :void gdk_window_init )
(define-extern :GdkWindow gdk_window_foreign_new :int)
(define-extern :void gdk_window_destroy :GdkWindow)
(define-extern :void gdk_window_destroy_notify :GdkWindow)
(define-extern :GdkWindow gdk_window_ref :GdkWindow)
(define-extern :void gdk_window_unref :GdkWindow)
(define-extern :void gdk_window_show :GdkWindow)
(define-extern :void gdk_window_hide :GdkWindow)
(define-extern :void gdk_window_withdraw :GdkWindow)
(define-extern :void gdk_window_move :GdkWindow :int :int)
(define-extern :void gdk_window_resize :GdkWindow :int :int)
(define-extern :void gdk_window_move_resize :GdkWindow :int :int :int :int)
(define-extern :void gdk_window_reparent :GdkWindow :GdkWindow :int :int)
(define-extern :void gdk_window_clear :GdkWindow)
(define-extern :void gdk_window_clear_area :GdkWindow :int :int :int :int)
(define-extern :void gdk_window_clear_area_e :GdkWindow :int :int :int :int)
(define-extern :void gdk_window_copy_area :GdkWindow :GdkGC :int :int :GdkWindow :int :int :int :int)
(define-extern :void gdk_window_raise :GdkWindow)
(define-extern :void gdk_window_lower :GdkWindow)
(define-extern :void gdk_window_set_user_data :GdkWindow :pointer)
(define-extern :void gdk_window_set_hints :GdkWindow :int :int :int :int :int :int :int)
(define-extern :void gdk_window_set_title :GdkWindow :string)
(define-extern :void gdk_window_set_role :GdkWindow :string)
(define-extern :void gdk_window_set_transient_for :GdkWindow :GdkWindow)
(define-extern :void gdk_window_set_background :GdkWindow :GdkColor)
(define-extern :void gdk_window_set_back_pixmap :GdkWindow :GdkWindow :boolean)
(define-extern :void gdk_window_set_cursor :GdkWindow :GdkCursor)
(define-extern :void gdk_window_set_colormap :GdkWindow :GdkColormap)
(define-extern :GdkVisual gdk_window_get_visual :GdkWindow)
(define-extern :GdkColormap gdk_window_get_colormap :GdkWindow)
(define-extern :int gdk_window_get_type :GdkWindow)
(define-extern :GdkWindow gdk_window_get_parent :GdkWindow)
(define-extern :GdkWindow gdk_window_get_toplevel :GdkWindow)
(define-extern :int gdk_window_get_events :GdkWindow)
(define-extern :void gdk_window_set_events :GdkWindow :int)
(define-extern :void gdk_window_add_colormap_windows :GdkWindow)
(define-extern :void gdk_window_shape_combine_mask :GdkWindow :GdkWindow :int :int)
(define-extern :void gdk_window_set_override_redirect :GdkWindow :boolean)
(define-extern :void gdk_window_set_icon :GdkWindow :GdkWindow :GdkWindow :GdkWindow)
(define-extern :void gdk_window_set_icon_name :GdkWindow :string)
(define-extern :void gdk_window_set_group :GdkWindow :GdkWindow)
(define-extern :void gdk_window_set_decorations :GdkWindow :int)
(define-extern :void gdk_window_set_functions :GdkWindow :int)
(define-extern :void gdk_window_set_child_shapes :GdkWindow)
(define-extern :void gdk_window_merge_child_shapes :GdkWindow)
(define-extern :boolean gdk_window_is_visible :GdkWindow)
(define-extern :boolean gdk_window_is_viewable :GdkWindow)
(define-extern :boolean gdk_window_set_static_gravities :GdkWindow :boolean)
;; (define-extern :?Window? gdk_window_xid_at :?Window? :int :int :int :int :?GList*? :boolean)
;; (define-extern :?Window? gdk_window_xid_at_coords :int :int :?GList*? :boolean)
;; (define-extern :GdkWindow gdk_window_new :GdkWindow :?GdkWindowAttr*? :int)
;; (define-extern :void gdk_window_set_geometry_hints :GdkWindow :?GdkGeometry*? :int)
;; (define-extern :void gdk_window_get_user_data :GdkWindow :?gpointer*?)
;; (define-extern :void gdk_window_get_geometry :GdkWindow :?gint*? :?gint*? :?gint*? :?gint*? :?gint*?)
;; (define-extern :void gdk_window_get_position :GdkWindow :?gint*? :?gint*?)
;; (define-extern :void gdk_window_get_size :GdkWindow :?gint*? :?gint*?)
;; (define-extern :int gdk_window_get_origin :GdkWindow :?gint*? :?gint*?)
;; (define-extern :boolean gdk_window_get_deskrelative_origin :GdkWindow :?gint*? :?gint*?)
;; (define-extern :void gdk_window_get_root_origin :GdkWindow :?gint*? :?gint*?)
;; (define-extern :GdkWindow gdk_window_get_pointer :GdkWindow :?gint*? :?gint*? :?GdkModifierType*?)
;; (define-extern :GdkWindow gdk_window_at_pointer :?gint*? :?gint*?)
;; (define-extern :?GList*? gdk_window_get_children :GdkWindow)
;; (define-extern :void gdk_window_add_filter :GdkWindow :?GdkFilterFunc? :pointer)
;; (define-extern :void gdk_window_remove_filter :GdkWindow :?GdkFilterFunc? :pointer)
;; (define-extern :?GList*? gdk_window_get_toplevels )
;; (define-extern :void gdk_drawable_set_data :GdkWindow :string :pointer :?GDestroyNotify?)
;; 
;; From file gdkxid.c 
;; 
;; (define-extern :void gdk_xid_table_insert :?XID*? :pointer)
;; (define-extern :void gdk_xid_table_remove :?XID?)
;; (define-extern :pointer gdk_xid_table_lookup :?XID?)
;;
;; Unconverted types:
;;

;;  'Colormap'		=> '',
;;  'GDestroyNotify'		=> '',
;;  'GList*'		=> '',
;;  'GdkAtom*'		=> '',
;;  'GdkAxisUse*'		=> '',
;;  'GdkBitmap**'		=> '',
;;  'GdkCapStyle'		=> '',
;;  'GdkColorContext*'		=> '',
;;  'GdkCursorType'		=> '',
;;  'GdkDestroyNotify'		=> '',
;;  'GdkDragAction'		=> '',
;;  'GdkDragProtocol'		=> '',
;;  'GdkDragProtocol*'		=> '',
;;  'GdkEventFunc'		=> '',
;;  'GdkEventMask'		=> '',
;;  'GdkExtensionMode'		=> '',
;;  'GdkFill'		=> '',
;;  'GdkFillRule'		=> '',
;;  'GdkFilterFunc'		=> '',
;;  'GdkFilterReturn'		=> '',
;;  'GdkFunction'		=> '',
;;  'GdkGCValues*'		=> '',
;;  'GdkGCValuesMask'		=> '',
;;  'GdkGeometry*'		=> '',
;;  'GdkIC*'		=> '',
;;  'GdkICAttr*'		=> '',
;;  'GdkICAttributesType'		=> '',
;;  'GdkIMStyle'		=> '',
;;  'GdkImage*'		=> '',
;;  'GdkImageType'		=> '',
;;  'GdkInputCondition'		=> '',
;;  'GdkInputFunction'		=> '',
;;  'GdkInputMode'		=> '',
;;  'GdkInputSource'		=> '',
;;  'GdkJoinStyle'		=> '',
;;  'GdkLineStyle'		=> '',
;;  'GdkModifierType'		=> '',
;;  'GdkModifierType*'		=> '',
;;  'GdkOverlapType'		=> '',
;;  'GdkPoint*'		=> '',
;;  'GdkPropMode'		=> '',
;;  'GdkRectangle*'		=> '',
;;  'GdkRegion*'		=> '',
;;  'GdkRgbCmap*'		=> '',
;;  'GdkRgbDither'		=> '',
;;  'GdkSegment*'		=> '',
;;  'GdkSubwindowMode'		=> '',
;;  'GdkTimeCoord*'		=> '',
;;  'GdkVisualType'		=> '',
;;  'GdkVisualType**'		=> '',
;;  'GdkWChar'		=> '',
;;  'GdkWChar*'		=> '',
;;  'GdkWMDecoration'		=> '',
;;  'GdkWMFunction'		=> '',
;;  'GdkWindow**'		=> '',
;;  'GdkWindowAttr*'		=> '',
;;  'GdkWindowHints'		=> '',
;;  'GdkWindowType'		=> '',
;;  'GdkXEvent*'		=> '',
;;  'Visual*'		=> '',
;;  'VisualID'		=> '',
;;  'Window'		=> '',
;;  'XEvent*'		=> '',
;;  'XID'		=> '',
;;  'XID*'		=> '',
;;  'char***'		=> '',
;;  'gboolean*'		=> '',
;;  'gchar**'		=> '',
;;  'gchar***'		=> '',
;;  'gdouble*'		=> '',
;;  'gint*'		=> '',
;;  'gint**'		=> '',
;;  'gpointer*'		=> '',
;;  'guchar**'		=> '',
;;  'guint32*'		=> '',
;;  'gulong*'		=> '',
;;  'gushort*'		=> '',
;;  'int*'		=> '',
