;; This file was automatically generated by make-gtk-proto 
;; Fri Apr 28 19:04:52 CEST 2000 
;; enums=GtkTroughType,GtkFontMetricType,GdkByteOrder,GtkUpdateType,GtkCTreePos,GdkFontType,GtkSortType,GtkSelectionMode,GtkCTreeLineStyle,GtkPathType,GtkToolbarSpaceStyle,GdkInputSource,GdkJoinStyle,GtkScrollType,GtkPathPriorityType,GdkCapStyle,GdkPropertyState,GtkRcTokenType,GdkVisibilityState,GtkToolbarChildType,GtkProgressBarStyle,GtkSpinType,GtkJustification,GdkWindowClass,GtkFontFilterType,GtkSubmenuDirection,GtkCellType,GdkInputMode,GtkSideType,GtkCurveType,GtkVisibility,GdkWindowType,GtkCTreeExpansionType,GdkOverlapType,GtkOrientation,GtkArrowType,GtkMatchType,GdkStatus,GdkEventType,GdkSelectionType,GtkWindowType,GtkAnchorType,GtkDirectionType,GtkStateType,GtkPreviewType,GtkReliefStyle,GtkShadowType,GdkRgbDither,GtkMenuFactoryType,GtkFundamentalType,GdkExtensionMode,GdkAxisUse,GtkPolicyType,GdkImageType,GdkSelection,GtkProgressBarOrientation,GdkFilterReturn,GdkTarget,GdkSubwindowMode,GtkPositionType,GtkResizeMode,GdkFill,GtkMenuDirectionType,GdkColorContextMode,GtkCTreeExpanderStyle,GdkCrossingMode,GdkDragProtocol,GtkPackType,GtkToolbarStyle,GtkMetricType,GdkVisualType,GtkSpinButtonUpdatePolicy,GdkLineStyle,GdkNotifyType,GtkCornerType,GtkWindowPosition,GtkCListDragPos,GdkFillRule,GtkTreeViewMode,GdkCursorType,GdkPropMode,GtkButtonBoxStyle,GdkFunction,GtkSubmenuPlacement
;; flags=GdkWMFunction,GtkButtonAction,GdkWMDecoration,GtkCalendarDisplayOptions,GdkEventMask,GdkModifierType,GtkAttachOptions,GtkDebugFlag,GtkRcFlags,GtkPackerOptions,GtkObjectFlags,GdkICAttributesType,GtkAccelFlags,GdkInputCondition,GtkArgFlags,GtkPrivateFlags,GtkDestDefaults,GdkDragAction,GdkWindowHints,GtkWidgetFlags,GdkWindowAttributesType,GtkTargetFlags,GtkSignalRunType,GdkGCValuesMask,GdkIMStyle,GtkFontType
;; 
;; From file gtkaccelgroup.c 
;; 
(define-extern :GtkAccelGroup gtk_accel_group_new )
(define-extern :GtkAccelGroup gtk_accel_group_get_default )
(define-extern :GtkAccelGroup gtk_accel_group_ref :GtkAccelGroup)
(define-extern :void gtk_accel_group_unref :GtkAccelGroup)
(define-extern :void gtk_accel_group_attach :GtkAccelGroup :GtkObject)
(define-extern :void gtk_accel_group_detach :GtkAccelGroup :GtkObject)
(define-extern :void gtk_accel_group_lock :GtkAccelGroup)
(define-extern :void gtk_accel_group_unlock :GtkAccelGroup)
(define-extern :boolean gtk_accel_group_activate :GtkAccelGroup :int :int)
(define-extern :boolean gtk_accel_groups_activate :GtkObject :int :int)
(define-extern :void gtk_accel_group_lock_entry :GtkAccelGroup :int :int)
(define-extern :void gtk_accel_group_unlock_entry :GtkAccelGroup :int :int)
(define-extern :void gtk_accel_group_add :GtkAccelGroup :int :int :int :GtkObject :string)
(define-extern :void gtk_accel_group_handle_add :GtkObject :int :GtkAccelGroup :int :int :int)
(define-extern :void gtk_accel_group_remove :GtkAccelGroup :int :int :GtkObject)
(define-extern :void gtk_accel_group_handle_remove :GtkObject :GtkAccelGroup :int :int)
(define-extern :int gtk_accel_group_create_add :int :int :int)
(define-extern :int gtk_accel_group_create_remove :int :int :int)
(define-extern :boolean gtk_accelerator_valid :int :int)
(define-extern :string gtk_accelerator_name :int :int)
(define-extern :void gtk_accelerator_set_default_mod_mask :int)
(define-extern :int gtk_accelerator_get_default_mod_mask )
;; (define-extern :?GtkAccelEntry*? gtk_accel_group_get_entry :GtkAccelGroup :int :int)
;; (define-extern :?GSList*? gtk_accel_groups_from_object :GtkObject)
;; (define-extern :?GSList*? gtk_accel_group_entries_from_object :GtkObject)
;; (define-extern :void gtk_accelerator_parse :string :?guint*? :?GdkModifierType*?)
;; 
;; From file gtkaccellabel.c 
;; 
(define-extern :int gtk_accel_label_get_type )
(define-extern :GtkObject gtk_accel_label_new :string)
(define-extern :int gtk_accel_label_get_accel_width :GtkObject)
(define-extern :void gtk_accel_label_set_accel_widget :GtkObject :GtkObject)
(define-extern :boolean gtk_accel_label_refetch :GtkObject)
;; 
;; From file gtkadjustment.c 
;; 
(define-extern :int gtk_adjustment_get_type )
(define-extern :GtkObject gtk_adjustment_new :double :double :double :double :double :double)
(define-extern :void gtk_adjustment_set_value :GtkObject :double)
(define-extern :void gtk_adjustment_changed :GtkObject)
(define-extern :void gtk_adjustment_value_changed :GtkObject)
(define-extern :void gtk_adjustment_clamp_page :GtkObject :double :double)
;; 
;; From file gtkalignment.c 
;; 
(define-extern :int gtk_alignment_get_type )
(define-extern :GtkObject gtk_alignment_new :double :double :double :double)
(define-extern :void gtk_alignment_set :GtkObject :double :double :double :double)
;; 
;; From file gtkarg.c 
;; 
(define-extern :string gtk_arg_name_strip_type :string)
(define-extern :int gtk_arg_info_equal :pointer :pointer)
(define-extern :int gtk_arg_info_hash :pointer)
;; (define-extern :?GtkArgInfo*? gtk_arg_type_new_static :int :string :int :?GHashTable*? :int :int :int)
;; (define-extern :string gtk_arg_get_info :int :?GHashTable*? :string :?GtkArgInfo**?)
;; (define-extern :string gtk_args_collect :int :?GHashTable*? :?GSList**? :?GSList**? :string :?va_list?)
;; (define-extern :void gtk_args_collect_cleanup :?GSList*? :?GSList*?)
;; (define-extern :?GtkArg*? gtk_args_query :int :?GHashTable*? :?guint32**? :?guint*?)
;; (define-extern :?GtkArg*? gtk_arg_new :int)
;; (define-extern :?GtkArg*? gtk_arg_copy :?GtkArg*? :?GtkArg*?)
;; (define-extern :void gtk_arg_free :?GtkArg*? :boolean)
;; (define-extern :void gtk_arg_reset :?GtkArg*?)
;; (define-extern :boolean gtk_arg_values_equal :?GtkArg*? :?GtkArg*?)
;; (define-extern :void gtk_arg_to_valueloc :?GtkArg*? :pointer)
;; 
;; From file gtkargcollector.c 
;; 
;; 
;; From file gtkarrow.c 
;; 
(define-extern :int gtk_arrow_get_type )
(define-extern :GtkObject gtk_arrow_new :int :int)
(define-extern :void gtk_arrow_set :GtkObject :int :int)
;; 
;; From file gtkaspectframe.c 
;; 
(define-extern :int gtk_aspect_frame_get_type )
(define-extern :GtkObject gtk_aspect_frame_new :string :double :double :double :boolean)
(define-extern :void gtk_aspect_frame_set :GtkObject :double :double :double :boolean)
;; 
;; From file gtkbbox.c 
;; 
(define-extern :int gtk_button_box_get_type )
(define-extern :void gtk_button_box_set_child_size_default :int :int)
(define-extern :void gtk_button_box_set_child_ipadding_default :int :int)
(define-extern :void gtk_button_box_set_spacing :GtkObject :int)
(define-extern :void gtk_button_box_set_child_size :GtkObject :int :int)
(define-extern :void gtk_button_box_set_child_ipadding :GtkObject :int :int)
(define-extern :void gtk_button_box_set_layout :GtkObject :int)
(define-extern :int gtk_button_box_get_spacing :GtkObject)
(define-extern :int gtk_button_box_get_layout :GtkObject)
;; (define-extern :void gtk_button_box_get_child_size_default :?gint*? :?gint*?)
;; (define-extern :void gtk_button_box_get_child_ipadding_default :?gint*? :?gint*?)
;; (define-extern :void gtk_button_box_get_child_size :GtkObject :?gint*? :?gint*?)
;; (define-extern :void gtk_button_box_get_child_ipadding :GtkObject :?gint*? :?gint*?)
;; (define-extern :void gtk_button_box_child_requisition :GtkObject :?int*? :?int*? :?int*?)
;; 
;; From file gtkbin.c 
;; 
(define-extern :int gtk_bin_get_type )
;; 
;; From file gtkbindings.c 
;; 
(define-extern :boolean gtk_bindings_activate :GtkObject :int :int)
(define-extern :boolean gtk_pattern_match_simple :string :string)
;; (define-extern :?GtkBindingSet*? gtk_binding_set_new :string)
;; (define-extern :?GtkBindingSet*? gtk_binding_set_by_class :pointer)
;; (define-extern :?GtkBindingSet*? gtk_binding_set_find :string)
;; (define-extern :boolean gtk_binding_set_activate :?GtkBindingSet*? :int :int :GtkObject)
;; (define-extern :void gtk_binding_entry_clear :?GtkBindingSet*? :int :int)
;; (define-extern :void gtk_binding_entry_remove :?GtkBindingSet*? :int :int)
;; (define-extern :void gtk_binding_entry_add_signall :?GtkBindingSet*? :int :int :string :?GSList*?)
;; (define-extern :void gtk_binding_set_add_path :?GtkBindingSet*? :int :string :int)
;; (define-extern :boolean gtk_pattern_match :?GtkPatternSpec*? :int :string :string)
;; (define-extern :void gtk_pattern_spec_init :?GtkPatternSpec*? :string)
;; (define-extern :boolean gtk_pattern_match_string :?GtkPatternSpec*? :string)
;; (define-extern :void gtk_pattern_spec_free_segs :?GtkPatternSpec*?)
;; (define-extern :int gtk_binding_parse_binding :?GScanner*?)
;; 
;; From file gtkbox.c 
;; 
(define-extern :int gtk_box_get_type )
(define-extern :void gtk_box_pack_start :GtkObject :GtkObject :boolean :boolean :int)
(define-extern :void gtk_box_pack_end :GtkObject :GtkObject :boolean :boolean :int)
(define-extern :void gtk_box_pack_start_defaults :GtkObject :GtkObject)
(define-extern :void gtk_box_pack_end_defaults :GtkObject :GtkObject)
(define-extern :void gtk_box_set_homogeneous :GtkObject :boolean)
(define-extern :void gtk_box_set_spacing :GtkObject :int)
(define-extern :void gtk_box_reorder_child :GtkObject :GtkObject :int)
(define-extern :void gtk_box_set_child_packing :GtkObject :GtkObject :boolean :boolean :int :int)
;; (define-extern :void gtk_box_query_child_packing :GtkObject :GtkObject :?gboolean*? :?gboolean*? :?guint*? :?GtkPackType*?)
;; 
;; From file gtkbutton.c 
;; 
(define-extern :int gtk_button_get_type )
(define-extern :GtkObject gtk_button_new )
(define-extern :GtkObject gtk_button_new_with_label :string)
(define-extern :void gtk_button_pressed :GtkObject)
(define-extern :void gtk_button_released :GtkObject)
(define-extern :void gtk_button_clicked :GtkObject)
(define-extern :void gtk_button_enter :GtkObject)
(define-extern :void gtk_button_leave :GtkObject)
(define-extern :void gtk_button_set_relief :GtkObject :int)
(define-extern :int gtk_button_get_relief :GtkObject)
;; 
;; From file gtkcalendar.c 
;; 
(define-extern :int gtk_calendar_get_type )
(define-extern :GtkObject gtk_calendar_new )
(define-extern :void gtk_calendar_display_options :GtkObject :int)
(define-extern :int gtk_calendar_select_month :GtkObject :int :int)
(define-extern :void gtk_calendar_select_day :GtkObject :int)
(define-extern :void gtk_calendar_clear_marks :GtkObject)
(define-extern :int gtk_calendar_mark_day :GtkObject :int)
(define-extern :int gtk_calendar_unmark_day :GtkObject :int)
(define-extern :void gtk_calendar_freeze :GtkObject)
(define-extern :void gtk_calendar_thaw :GtkObject)
;; (define-extern :void gtk_calendar_get_date :GtkObject :?guint*? :?guint*? :?guint*?)
;; 
;; From file gtkcheckbutton.c 
;; 
(define-extern :int gtk_check_button_get_type )
(define-extern :GtkObject gtk_check_button_new )
(define-extern :GtkObject gtk_check_button_new_with_label :string)
;; 
;; From file gtkcheckmenuitem.c 
;; 
(define-extern :int gtk_check_menu_item_get_type )
(define-extern :GtkObject gtk_check_menu_item_new )
(define-extern :GtkObject gtk_check_menu_item_new_with_label :string)
(define-extern :void gtk_check_menu_item_set_active :GtkObject :boolean)
(define-extern :void gtk_check_menu_item_set_show_toggle :GtkObject :boolean)
(define-extern :void gtk_check_menu_item_toggled :GtkObject)
;; 
;; From file gtkclist.c 
;; 
(define-extern :int gtk_clist_get_type )
(define-extern :GtkObject gtk_clist_new :int)
(define-extern :void gtk_clist_set_hadjustment :GtkObject :GtkObject)
(define-extern :GtkObject gtk_clist_get_hadjustment :GtkObject)
(define-extern :void gtk_clist_set_vadjustment :GtkObject :GtkObject)
(define-extern :GtkObject gtk_clist_get_vadjustment :GtkObject)
(define-extern :void gtk_clist_set_shadow_type :GtkObject :int)
(define-extern :void gtk_clist_set_selection_mode :GtkObject :int)
(define-extern :void gtk_clist_freeze :GtkObject)
(define-extern :void gtk_clist_thaw :GtkObject)
(define-extern :void gtk_clist_column_titles_show :GtkObject)
(define-extern :void gtk_clist_column_titles_hide :GtkObject)
(define-extern :void gtk_clist_column_title_active :GtkObject :int)
(define-extern :void gtk_clist_column_title_passive :GtkObject :int)
(define-extern :void gtk_clist_column_titles_active :GtkObject)
(define-extern :void gtk_clist_column_titles_passive :GtkObject)
(define-extern :void gtk_clist_set_column_title :GtkObject :int :string)
(define-extern :string gtk_clist_get_column_title :GtkObject :int)
(define-extern :void gtk_clist_set_column_widget :GtkObject :int :GtkObject)
(define-extern :GtkObject gtk_clist_get_column_widget :GtkObject :int)
(define-extern :void gtk_clist_set_column_justification :GtkObject :int :int)
(define-extern :void gtk_clist_set_column_visibility :GtkObject :int :boolean)
(define-extern :void gtk_clist_set_column_resizeable :GtkObject :int :boolean)
(define-extern :void gtk_clist_set_column_auto_resize :GtkObject :int :boolean)
(define-extern :int gtk_clist_columns_autosize :GtkObject)
(define-extern :int gtk_clist_optimal_column_width :GtkObject :int)
(define-extern :void gtk_clist_set_column_width :GtkObject :int :int)
(define-extern :void gtk_clist_set_column_min_width :GtkObject :int :int)
(define-extern :void gtk_clist_set_column_max_width :GtkObject :int :int)
(define-extern :int gtk_clist_get_cell_type :GtkObject :int :int)
(define-extern :void gtk_clist_set_text :GtkObject :int :int :string)
(define-extern :void gtk_clist_set_pixmap :GtkObject :int :int :GdkWindow :GdkWindow)
(define-extern :void gtk_clist_set_pixtext :GtkObject :int :int :string :int :GdkWindow :GdkWindow)
(define-extern :void gtk_clist_set_shift :GtkObject :int :int :int :int)
(define-extern :void gtk_clist_remove :GtkObject :int)
(define-extern :void gtk_clist_clear :GtkObject)
(define-extern :void gtk_clist_moveto :GtkObject :int :int :double :double)
(define-extern :void gtk_clist_set_row_height :GtkObject :int)
(define-extern :void gtk_clist_set_row_data :GtkObject :int :pointer)
(define-extern :pointer gtk_clist_get_row_data :GtkObject :int)
(define-extern :int gtk_clist_find_row_from_data :GtkObject :pointer)
(define-extern :void gtk_clist_swap_rows :GtkObject :int :int)
(define-extern :void gtk_clist_row_move :GtkObject :int :int)
(define-extern :int gtk_clist_row_is_visible :GtkObject :int)
(define-extern :void gtk_clist_set_foreground :GtkObject :int :GdkColor)
(define-extern :void gtk_clist_set_background :GtkObject :int :GdkColor)
(define-extern :void gtk_clist_set_cell_style :GtkObject :int :int :GtkStyle)
(define-extern :GtkStyle gtk_clist_get_cell_style :GtkObject :int :int)
(define-extern :void gtk_clist_set_row_style :GtkObject :int :GtkStyle)
(define-extern :GtkStyle gtk_clist_get_row_style :GtkObject :int)
(define-extern :void gtk_clist_set_selectable :GtkObject :int :boolean)
(define-extern :boolean gtk_clist_get_selectable :GtkObject :int)
(define-extern :void gtk_clist_select_row :GtkObject :int :int)
(define-extern :void gtk_clist_unselect_row :GtkObject :int :int)
(define-extern :void gtk_clist_select_all :GtkObject)
(define-extern :void gtk_clist_unselect_all :GtkObject)
(define-extern :void gtk_clist_undo_selection :GtkObject)
(define-extern :void gtk_clist_sort :GtkObject)
(define-extern :void gtk_clist_set_auto_sort :GtkObject :boolean)
(define-extern :void gtk_clist_set_sort_type :GtkObject :int)
(define-extern :void gtk_clist_set_sort_column :GtkObject :int)
(define-extern :void gtk_clist_set_reorderable :GtkObject :boolean)
(define-extern :void gtk_clist_set_use_drag_icons :GtkObject :boolean)
(define-extern :void gtk_clist_set_button_actions :GtkObject :int :int)
;; (define-extern :int gtk_clist_get_text :GtkObject :int :int :?gchar**?)
;; (define-extern :int gtk_clist_get_pixmap :GtkObject :int :int :?GdkPixmap**? :?GdkBitmap**?)
;; (define-extern :int gtk_clist_get_pixtext :GtkObject :int :int :?gchar**? :?guint8*? :?GdkPixmap**? :?GdkBitmap**?)
;; (define-extern :void gtk_clist_set_row_data_full :GtkObject :int :pointer :?GtkDestroyNotify?)
;; (define-extern :int gtk_clist_get_selection_info :GtkObject :int :int :?gint*? :?gint*?)
;; (define-extern :void gtk_clist_set_compare_func :GtkObject :?GtkCListCompareFunc?)
;; 
;; From file gtkcolorsel.c 
;; 
(define-extern :int gtk_color_selection_get_type )
(define-extern :GtkObject gtk_color_selection_new )
(define-extern :void gtk_color_selection_set_update_policy :GtkObject :int)
(define-extern :void gtk_color_selection_set_opacity :GtkObject :int)
(define-extern :int gtk_color_selection_dialog_get_type )
(define-extern :GtkObject gtk_color_selection_dialog_new :string)
;; (define-extern :void gtk_color_selection_set_color :GtkObject :?gdouble*?)
;; (define-extern :void gtk_color_selection_get_color :GtkObject :?gdouble*?)
;; 
;; From file gtkcombo.c 
;; 
(define-extern :int gtk_combo_get_type )
(define-extern :GtkObject gtk_combo_new )
(define-extern :void gtk_combo_set_value_in_list :GtkObject :int :int)
(define-extern :void gtk_combo_set_case_sensitive :GtkObject :int)
(define-extern :void gtk_combo_set_use_arrows :GtkObject :int)
(define-extern :void gtk_combo_set_use_arrows_always :GtkObject :int)
(define-extern :void gtk_combo_set_item_string :GtkObject :GtkObject :string)
(define-extern :void gtk_combo_disable_activate :GtkObject)
;; (define-extern :void gtk_combo_set_popdown_strings :GtkObject :?GList*?)
;; 
;; From file gtkcontainer.c 
;; 
(define-extern :int gtk_container_get_type )
(define-extern :int gtk_container_child_type :GtkObject)
(define-extern :void gtk_container_add_child_arg_type :string :int :int :int)
(define-extern :void gtk_container_set_border_width :GtkObject :int)
(define-extern :void gtk_container_add :GtkObject :GtkObject)
(define-extern :void gtk_container_remove :GtkObject :GtkObject)
(define-extern :void gtk_container_dequeue_resize_handler :GtkObject)
(define-extern :void gtk_container_clear_resize_widgets :GtkObject)
(define-extern :void gtk_container_set_resize_mode :GtkObject :int)
(define-extern :void gtk_container_set_reallocate_redraws :GtkObject :boolean)
(define-extern :void gtk_container_queue_resize :GtkObject)
(define-extern :void gtk_container_check_resize :GtkObject)
(define-extern :void gtk_container_resize_children :GtkObject)
(define-extern :int gtk_container_focus :GtkObject :int)
(define-extern :void gtk_container_set_focus_child :GtkObject :GtkObject)
(define-extern :void gtk_container_register_toplevel :GtkObject)
(define-extern :void gtk_container_unregister_toplevel :GtkObject)
(define-extern :string gtk_container_child_composite_name :GtkObject :GtkObject)
(define-extern :void gtk_container_set_focus_vadjustment :GtkObject :GtkObject)
(define-extern :void gtk_container_set_focus_hadjustment :GtkObject :GtkObject)
;; (define-extern :void gtk_container_addv :GtkObject :GtkObject :int :?GtkArg*?)
;; (define-extern :void gtk_container_child_setv :GtkObject :GtkObject :int :?GtkArg*?)
;; (define-extern :void gtk_container_child_getv :GtkObject :GtkObject :int :?GtkArg*?)
;; (define-extern :void gtk_container_arg_set :GtkObject :GtkObject :?GtkArg*? :?GtkArgInfo*?)
;; (define-extern :void gtk_container_arg_get :GtkObject :GtkObject :?GtkArg*? :?GtkArgInfo*?)
;; (define-extern :string gtk_container_child_args_collect :int :?GSList**? :?GSList**? :string :?va_list?)
;; (define-extern :string gtk_container_child_arg_get_info :int :string :?GtkArgInfo**?)
;; (define-extern :?GtkArg*? gtk_container_query_child_args :int :?guint32**? :?guint*?)
;; (define-extern :void gtk_container_forall :GtkObject :?GtkCallback? :pointer)
;; (define-extern :void gtk_container_foreach :GtkObject :?GtkCallback? :pointer)
;; (define-extern :void gtk_container_foreach_full :GtkObject :?GtkCallback? :?GtkCallbackMarshal? :pointer :?GtkDestroyNotify?)
;; (define-extern :?GList*? gtk_container_children :GtkObject)
;; (define-extern :?GList*? gtk_container_get_toplevels )
;; (define-extern :void gtk_container_real_set_focus_child :GtkObject :GtkObject)
;; 
;; From file gtkctree.c 
;; 
(define-extern :int gtk_ctree_get_type )
(define-extern :GtkObject gtk_ctree_new :int :int)
(define-extern :void gtk_ctree_remove_node :GtkObject :GtkCTreeNode)
(define-extern :boolean gtk_ctree_is_viewable :GtkObject :GtkCTreeNode)
(define-extern :GtkCTreeNode gtk_ctree_last :GtkObject :GtkCTreeNode)
(define-extern :GtkCTreeNode gtk_ctree_find_node_ptr :GtkObject :GtkObject)
(define-extern :GtkCTreeNode gtk_ctree_node_nth :GtkObject :int)
(define-extern :boolean gtk_ctree_find :GtkObject :GtkCTreeNode :GtkCTreeNode)
(define-extern :boolean gtk_ctree_is_ancestor :GtkObject :GtkCTreeNode :GtkCTreeNode)
(define-extern :GtkCTreeNode gtk_ctree_find_by_row_data :GtkObject :GtkCTreeNode :pointer)
(define-extern :boolean gtk_ctree_is_hot_spot :GtkObject :int :int)
(define-extern :void gtk_ctree_move :GtkObject :GtkCTreeNode :GtkCTreeNode :GtkCTreeNode)
(define-extern :void gtk_ctree_expand :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_expand_recursive :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_expand_to_depth :GtkObject :GtkCTreeNode :int)
(define-extern :void gtk_ctree_collapse :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_collapse_recursive :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_collapse_to_depth :GtkObject :GtkCTreeNode :int)
(define-extern :void gtk_ctree_toggle_expansion :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_toggle_expansion_recursive :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_select :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_unselect :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_select_recursive :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_unselect_recursive :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_node_set_text :GtkObject :GtkCTreeNode :int :string)
(define-extern :void gtk_ctree_node_set_pixmap :GtkObject :GtkCTreeNode :int :GdkWindow :GdkWindow)
(define-extern :void gtk_ctree_node_set_pixtext :GtkObject :GtkCTreeNode :int :string :int :GdkWindow :GdkWindow)
(define-extern :void gtk_ctree_set_node_info :GtkObject :GtkCTreeNode :string :int :GdkWindow :GdkWindow :GdkWindow :GdkWindow :boolean :boolean)
(define-extern :void gtk_ctree_node_set_shift :GtkObject :GtkCTreeNode :int :int :int)
(define-extern :void gtk_ctree_node_set_selectable :GtkObject :GtkCTreeNode :boolean)
(define-extern :boolean gtk_ctree_node_get_selectable :GtkObject :GtkCTreeNode)
(define-extern :int gtk_ctree_node_get_cell_type :GtkObject :GtkCTreeNode :int)
(define-extern :void gtk_ctree_node_set_cell_style :GtkObject :GtkCTreeNode :int :GtkStyle)
(define-extern :GtkStyle gtk_ctree_node_get_cell_style :GtkObject :GtkCTreeNode :int)
(define-extern :void gtk_ctree_node_set_row_style :GtkObject :GtkCTreeNode :GtkStyle)
(define-extern :GtkStyle gtk_ctree_node_get_row_style :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_node_set_foreground :GtkObject :GtkCTreeNode :GdkColor)
(define-extern :void gtk_ctree_node_set_background :GtkObject :GtkCTreeNode :GdkColor)
(define-extern :void gtk_ctree_node_set_row_data :GtkObject :GtkCTreeNode :pointer)
(define-extern :pointer gtk_ctree_node_get_row_data :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_node_moveto :GtkObject :GtkCTreeNode :int :double :double)
(define-extern :int gtk_ctree_node_is_visible :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_set_indent :GtkObject :int)
(define-extern :void gtk_ctree_set_spacing :GtkObject :int)
(define-extern :void gtk_ctree_set_show_stub :GtkObject :boolean)
(define-extern :void gtk_ctree_set_line_style :GtkObject :int)
(define-extern :void gtk_ctree_set_expander_style :GtkObject :int)
(define-extern :void gtk_ctree_sort_recursive :GtkObject :GtkCTreeNode)
(define-extern :void gtk_ctree_sort_node :GtkObject :GtkCTreeNode)
;; (define-extern :GtkCTreeNode gtk_ctree_insert_gnode :GtkObject :GtkCTreeNode :GtkCTreeNode :?GNode*? :?GtkCTreeGNodeFunc? :pointer)
;; (define-extern :?GNode*? gtk_ctree_export_to_gnode :GtkObject :?GNode*? :?GNode*? :GtkCTreeNode :?GtkCTreeGNodeFunc? :pointer)
;; (define-extern :void gtk_ctree_post_recursive :GtkObject :GtkCTreeNode :?GtkCTreeFunc? :pointer)
;; (define-extern :void gtk_ctree_post_recursive_to_depth :GtkObject :GtkCTreeNode :int :?GtkCTreeFunc? :pointer)
;; (define-extern :void gtk_ctree_pre_recursive :GtkObject :GtkCTreeNode :?GtkCTreeFunc? :pointer)
;; (define-extern :void gtk_ctree_pre_recursive_to_depth :GtkObject :GtkCTreeNode :int :?GtkCTreeFunc? :pointer)
;; (define-extern :?GList*? gtk_ctree_find_all_by_row_data :GtkObject :GtkCTreeNode :pointer)
;; (define-extern :GtkCTreeNode gtk_ctree_find_by_row_data_custom :GtkObject :GtkCTreeNode :pointer :?GCompareFunc?)
;; (define-extern :?GList*? gtk_ctree_find_all_by_row_data_custom :GtkObject :GtkCTreeNode :pointer :?GCompareFunc?)
;; (define-extern :void gtk_ctree_real_select_recursive :GtkObject :GtkCTreeNode :int)
;; (define-extern :int gtk_ctree_node_get_text :GtkObject :GtkCTreeNode :int :?gchar**?)
;; (define-extern :int gtk_ctree_node_get_pixmap :GtkObject :GtkCTreeNode :int :?GdkPixmap**? :?GdkBitmap**?)
;; (define-extern :int gtk_ctree_node_get_pixtext :GtkObject :GtkCTreeNode :int :?gchar**? :?guint8*? :?GdkPixmap**? :?GdkBitmap**?)
;; (define-extern :int gtk_ctree_get_node_info :GtkObject :GtkCTreeNode :?gchar**? :?guint8*? :?GdkPixmap**? :?GdkBitmap**? :?GdkPixmap**? :?GdkBitmap**? :?gboolean*? :?gboolean*?)
;; (define-extern :void gtk_ctree_node_set_row_data_full :GtkObject :GtkCTreeNode :pointer :?GtkDestroyNotify?)
;; (define-extern :void gtk_ctree_set_drag_compare_func :GtkObject :?GtkCTreeCompareDragFunc?)
;; 
;; From file gtkcurve.c 
;; 
(define-extern :int gtk_curve_get_type )
(define-extern :void gtk_curve_set_curve_type :GtkObject :int)
(define-extern :void gtk_curve_reset :GtkObject)
(define-extern :void gtk_curve_set_gamma :GtkObject :double)
(define-extern :void gtk_curve_set_range :GtkObject :double :double :double :double)
(define-extern :GtkObject gtk_curve_new )
;; 
;; From file gtkdata.c 
;; 
(define-extern :int gtk_data_get_type )
;; 
;; From file gtkdialog.c 
;; 
(define-extern :int gtk_dialog_get_type )
(define-extern :GtkObject gtk_dialog_new )
;; 
;; From file gtkdnd.c 
;; 
(define-extern :void gtk_drag_get_data :GtkObject :GdkDragContext :GdkAtom :int)
(define-extern :GtkObject gtk_drag_get_source_widget :GdkDragContext)
(define-extern :void gtk_drag_finish :GdkDragContext :boolean :boolean :int)
(define-extern :void gtk_drag_highlight :GtkObject)
(define-extern :void gtk_drag_unhighlight :GtkObject)
(define-extern :void gtk_drag_dest_set_proxy :GtkObject :GdkWindow :int :boolean)
(define-extern :void gtk_drag_dest_unset :GtkObject)
(define-extern :void gtk_drag_dest_handle_event :GtkObject :GdkEvent)
(define-extern :void gtk_drag_source_unset :GtkObject)
(define-extern :void gtk_drag_source_set_icon :GtkObject :GdkColormap :GdkWindow :GdkWindow)
(define-extern :void gtk_drag_set_icon_widget :GdkDragContext :GtkObject :int :int)
(define-extern :void gtk_drag_set_icon_pixmap :GdkDragContext :GdkColormap :GdkWindow :GdkWindow :int :int)
(define-extern :void gtk_drag_set_icon_default :GdkDragContext)
(define-extern :void gtk_drag_set_default_icon :GdkColormap :GdkWindow :GdkWindow :int :int)
(define-extern :void gtk_drag_source_handle_event :GtkObject :GdkEvent)
;; (define-extern :void gtk_drag_dest_set :GtkObject :int :?GtkTargetEntry*? :int :int)
;; (define-extern :GdkDragContext gtk_drag_begin :GtkObject :?GtkTargetList*? :int :int :GdkEvent)
;; (define-extern :void gtk_drag_source_set :GtkObject :int :?GtkTargetEntry*? :int :int)
;; 
;; From file gtkdrawingarea.c 
;; 
(define-extern :int gtk_drawing_area_get_type )
(define-extern :GtkObject gtk_drawing_area_new )
(define-extern :void gtk_drawing_area_size :GtkObject :int :int)
;; 
;; From file gtkeditable.c 
;; 
(define-extern :int gtk_editable_get_type )
(define-extern :void gtk_editable_delete_text :GtkObject :int :int)
(define-extern :string gtk_editable_get_chars :GtkObject :int :int)
(define-extern :void gtk_editable_set_position :GtkObject :int)
(define-extern :int gtk_editable_get_position :GtkObject)
(define-extern :void gtk_editable_delete_selection :GtkObject)
(define-extern :void gtk_editable_claim_selection :GtkObject :boolean :int)
(define-extern :void gtk_editable_select_region :GtkObject :int :int)
(define-extern :void gtk_editable_cut_clipboard :GtkObject)
(define-extern :void gtk_editable_copy_clipboard :GtkObject)
(define-extern :void gtk_editable_paste_clipboard :GtkObject)
(define-extern :void gtk_editable_set_editable :GtkObject :boolean)
(define-extern :void gtk_editable_changed :GtkObject)
;; (define-extern :void gtk_editable_insert_text :GtkObject :string :int :?gint*?)
;; 
;; From file gtkentry.c 
;; 
(define-extern :int gtk_entry_get_type )
(define-extern :GtkObject gtk_entry_new )
(define-extern :GtkObject gtk_entry_new_with_max_length :int)
(define-extern :void gtk_entry_set_text :GtkObject :string)
(define-extern :void gtk_entry_append_text :GtkObject :string)
(define-extern :void gtk_entry_prepend_text :GtkObject :string)
(define-extern :void gtk_entry_set_position :GtkObject :int)
(define-extern :void gtk_entry_set_visibility :GtkObject :boolean)
(define-extern :void gtk_entry_set_editable :GtkObject :boolean)
(define-extern :string gtk_entry_get_text :GtkObject)
(define-extern :void gtk_entry_select_region :GtkObject :int :int)
(define-extern :void gtk_entry_set_max_length :GtkObject :int)
;; 
;; From file gtkeventbox.c 
;; 
(define-extern :int gtk_event_box_get_type )
(define-extern :GtkObject gtk_event_box_new )
;; 
;; From file gtkfilesel.c 
;; 
(define-extern :int gtk_file_selection_get_type )
(define-extern :GtkObject gtk_file_selection_new :string)
(define-extern :void gtk_file_selection_show_fileop_buttons :GtkObject)
(define-extern :void gtk_file_selection_hide_fileop_buttons :GtkObject)
(define-extern :void gtk_file_selection_set_filename :GtkObject :string)
(define-extern :string gtk_file_selection_get_filename :GtkObject)
(define-extern :void gtk_file_selection_complete :GtkObject :string)
;; 
;; From file gtkfixed.c 
;; 
(define-extern :int gtk_fixed_get_type )
(define-extern :GtkObject gtk_fixed_new )
(define-extern :void gtk_fixed_put :GtkObject :GtkObject :int :int)
(define-extern :void gtk_fixed_move :GtkObject :GtkObject :int :int)
;; 
;; From file gtkfontsel.c 
;; 
(define-extern :int gtk_font_selection_get_type )
(define-extern :GtkObject gtk_font_selection_new )
(define-extern :GdkFont gtk_font_selection_get_font :GtkObject)
(define-extern :string gtk_font_selection_get_font_name :GtkObject)
(define-extern :boolean gtk_font_selection_set_font_name :GtkObject :string)
(define-extern :string gtk_font_selection_get_preview_text :GtkObject)
(define-extern :void gtk_font_selection_set_preview_text :GtkObject :string)
(define-extern :int gtk_font_selection_dialog_get_type )
(define-extern :GtkObject gtk_font_selection_dialog_new :string)
(define-extern :string gtk_font_selection_dialog_get_font_name :GtkObject)
(define-extern :GdkFont gtk_font_selection_dialog_get_font :GtkObject)
(define-extern :boolean gtk_font_selection_dialog_set_font_name :GtkObject :string)
(define-extern :string gtk_font_selection_dialog_get_preview_text :GtkObject)
(define-extern :void gtk_font_selection_dialog_set_preview_text :GtkObject :string)
;; (define-extern :void gtk_font_selection_set_filter :GtkObject :int :int :?gchar**? :?gchar**? :?gchar**? :?gchar**? :?gchar**? :?gchar**?)
;; (define-extern :void gtk_font_selection_dialog_set_filter :GtkObject :int :int :?gchar**? :?gchar**? :?gchar**? :?gchar**? :?gchar**? :?gchar**?)
;; 
;; From file gtkframe.c 
;; 
(define-extern :int gtk_frame_get_type )
(define-extern :GtkObject gtk_frame_new :string)
(define-extern :void gtk_frame_set_label :GtkObject :string)
(define-extern :void gtk_frame_set_label_align :GtkObject :double :double)
(define-extern :void gtk_frame_set_shadow_type :GtkObject :int)
;; 
;; From file gtkgamma.c 
;; 
(define-extern :int gtk_gamma_curve_get_type )
(define-extern :GtkObject gtk_gamma_curve_new )
;; 
;; From file gtkgc.c 
;; 
(define-extern :void gtk_gc_release :GdkGC)
;; (define-extern :GdkGC gtk_gc_get :int :GdkColormap :?GdkGCValues*? :int)
;; 
;; From file gtkhandlebox.c 
;; 
(define-extern :int gtk_handle_box_get_type )
(define-extern :GtkObject gtk_handle_box_new )
(define-extern :void gtk_handle_box_set_shadow_type :GtkObject :int)
(define-extern :void gtk_handle_box_set_handle_position :GtkObject :int)
(define-extern :void gtk_handle_box_set_snap_edge :GtkObject :int)
;; 
;; From file gtkhbbox.c 
;; 
(define-extern :int gtk_hbutton_box_get_type )
(define-extern :GtkObject gtk_hbutton_box_new )
(define-extern :void gtk_hbutton_box_set_spacing_default :int)
(define-extern :void gtk_hbutton_box_set_layout_default :int)
(define-extern :int gtk_hbutton_box_get_spacing_default )
(define-extern :int gtk_hbutton_box_get_layout_default )
;; 
;; From file gtkhbox.c 
;; 
(define-extern :int gtk_hbox_get_type )
(define-extern :GtkObject gtk_hbox_new :boolean :int)
;; 
;; From file gtkhpaned.c 
;; 
(define-extern :int gtk_hpaned_get_type )
(define-extern :GtkObject gtk_hpaned_new )
;; 
;; From file gtkhruler.c 
;; 
(define-extern :int gtk_hruler_get_type )
(define-extern :GtkObject gtk_hruler_new )
;; 
;; From file gtkhscale.c 
;; 
(define-extern :int gtk_hscale_get_type )
(define-extern :GtkObject gtk_hscale_new :GtkObject)
;; 
;; From file gtkhscrollbar.c 
;; 
(define-extern :int gtk_hscrollbar_get_type )
(define-extern :GtkObject gtk_hscrollbar_new :GtkObject)
;; 
;; From file gtkhseparator.c 
;; 
(define-extern :int gtk_hseparator_get_type )
(define-extern :GtkObject gtk_hseparator_new )
;; 
;; From file gtkimage.c 
;; 
(define-extern :int gtk_image_get_type )
;; (define-extern :GtkObject gtk_image_new :?GdkImage*? :GdkWindow)
;; (define-extern :void gtk_image_set :GtkObject :?GdkImage*? :GdkWindow)
;; (define-extern :void gtk_image_get :GtkObject :?GdkImage**? :?GdkBitmap**?)
;; 
;; From file gtkinputdialog.c 
;; 
(define-extern :int gtk_input_dialog_get_type )
(define-extern :GtkObject gtk_input_dialog_new )
;; 
;; From file gtkinvisible.c 
;; 
(define-extern :int gtk_invisible_get_type )
(define-extern :GtkObject gtk_invisible_new )
;; 
;; From file gtkitem.c 
;; 
(define-extern :int gtk_item_get_type )
(define-extern :void gtk_item_select :GtkObject)
(define-extern :void gtk_item_deselect :GtkObject)
(define-extern :void gtk_item_toggle :GtkObject)
;; 
;; From file gtkitemfactory.c 
;; 
(define-extern :int gtk_item_factory_get_type )
(define-extern :GtkObject gtk_item_factory_new :int :string :GtkAccelGroup)
(define-extern :void gtk_item_factory_add_foreign :GtkObject :string :GtkAccelGroup :int :int)
(define-extern :void gtk_item_factory_construct :GtkObject :int :string :GtkAccelGroup)
(define-extern :GtkObject gtk_item_factory_from_path :string)
(define-extern :GtkObject gtk_item_factory_from_widget :GtkObject)
(define-extern :string gtk_item_factory_path_from_widget :GtkObject)
(define-extern :void gtk_item_factory_print_func :pointer :string)
(define-extern :GtkObject gtk_item_factory_get_widget :GtkObject :string)
(define-extern :GtkObject gtk_item_factory_get_widget_by_action :GtkObject :int)
(define-extern :GtkObject gtk_item_factory_get_item :GtkObject :string)
(define-extern :GtkObject gtk_item_factory_get_item_by_action :GtkObject :int)
(define-extern :void gtk_item_factories_path_delete :string :string)
(define-extern :void gtk_item_factory_delete_item :GtkObject :string)
(define-extern :pointer gtk_item_factory_popup_data_from_widget :GtkObject)
(define-extern :pointer gtk_item_factory_popup_data :GtkObject)
(define-extern :void gtk_item_factory_popup :GtkObject :int :int :int :int)
(define-extern :void gtk_item_factory_parse_rc_string :string)
(define-extern :void gtk_item_factory_parse_rc :string)
;; (define-extern :void gtk_item_factory_dump_items :?GtkPatternSpec*? :boolean :?GtkPrintFunc? :pointer)
;; (define-extern :void gtk_item_factory_dump_rc :string :?GtkPatternSpec*? :boolean)
;; (define-extern :void gtk_item_factory_create_items :GtkObject :int :?GtkItemFactoryEntry*? :pointer)
;; (define-extern :void gtk_item_factory_create_items_ac :GtkObject :int :?GtkItemFactoryEntry*? :pointer :int)
;; (define-extern :void gtk_item_factory_create_item :GtkObject :?GtkItemFactoryEntry*? :pointer :int)
;; (define-extern :void gtk_item_factory_create_menu_entries :int :?GtkMenuEntry*?)
;; (define-extern :void gtk_item_factory_delete_entry :GtkObject :?GtkItemFactoryEntry*?)
;; (define-extern :void gtk_item_factory_delete_entries :GtkObject :int :?GtkItemFactoryEntry*?)
;; (define-extern :void gtk_item_factory_popup_with_data :GtkObject :pointer :?GtkDestroyNotify? :int :int :int :int)
;; (define-extern :void gtk_item_factory_parse_rc_scanner :?GScanner*?)
;; (define-extern :void gtk_item_factory_set_translate_func :GtkObject :?GtkTranslateFunc? :pointer :?GtkDestroyNotify?)
;; 
;; From file gtklabel.c 
;; 
(define-extern :int gtk_label_get_type )
(define-extern :GtkObject gtk_label_new :string)
(define-extern :void gtk_label_set_text :GtkObject :string)
(define-extern :void gtk_label_set_pattern :GtkObject :string)
(define-extern :void gtk_label_set_justify :GtkObject :int)
(define-extern :void gtk_label_set_line_wrap :GtkObject :boolean)
(define-extern :int gtk_label_parse_uline :GtkObject :string)
;; (define-extern :void gtk_label_get :GtkObject :?gchar**?)
;; 
;; From file gtklayout.c 
;; 
(define-extern :GtkObject gtk_layout_new :GtkObject :GtkObject)
(define-extern :GtkObject gtk_layout_get_hadjustment :GtkObject)
(define-extern :GtkObject gtk_layout_get_vadjustment :GtkObject)
(define-extern :void gtk_layout_set_hadjustment :GtkObject :GtkObject)
(define-extern :void gtk_layout_set_vadjustment :GtkObject :GtkObject)
(define-extern :void gtk_layout_put :GtkObject :GtkObject :int :int)
(define-extern :void gtk_layout_move :GtkObject :GtkObject :int :int)
(define-extern :void gtk_layout_set_size :GtkObject :int :int)
(define-extern :void gtk_layout_freeze :GtkObject)
(define-extern :void gtk_layout_thaw :GtkObject)
(define-extern :int gtk_layout_get_type )
;; 
;; From file gtklist.c 
;; 
(define-extern :int gtk_list_get_type )
(define-extern :GtkObject gtk_list_new )
(define-extern :void gtk_list_clear_items :GtkObject :int :int)
(define-extern :int gtk_list_child_position :GtkObject :GtkObject)
(define-extern :void gtk_list_set_selection_mode :GtkObject :int)
(define-extern :void gtk_list_select_item :GtkObject :int)
(define-extern :void gtk_list_unselect_item :GtkObject :int)
(define-extern :void gtk_list_select_child :GtkObject :GtkObject)
(define-extern :void gtk_list_unselect_child :GtkObject :GtkObject)
(define-extern :void gtk_list_select_all :GtkObject)
(define-extern :void gtk_list_unselect_all :GtkObject)
(define-extern :void gtk_list_extend_selection :GtkObject :int :double :boolean)
(define-extern :void gtk_list_end_drag_selection :GtkObject)
(define-extern :void gtk_list_start_selection :GtkObject)
(define-extern :void gtk_list_end_selection :GtkObject)
(define-extern :void gtk_list_toggle_row :GtkObject :GtkObject)
(define-extern :void gtk_list_toggle_focus_row :GtkObject)
(define-extern :void gtk_list_toggle_add_mode :GtkObject)
(define-extern :void gtk_list_undo_selection :GtkObject)
(define-extern :void gtk_list_scroll_horizontal :GtkObject :int :double)
(define-extern :void gtk_list_scroll_vertical :GtkObject :int :double)
;; (define-extern :void gtk_list_insert_items :GtkObject :?GList*? :int)
;; (define-extern :void gtk_list_append_items :GtkObject :?GList*?)
;; (define-extern :void gtk_list_prepend_items :GtkObject :?GList*?)
;; (define-extern :void gtk_list_remove_items :GtkObject :?GList*?)
;; (define-extern :void gtk_list_remove_items_no_unref :GtkObject :?GList*?)
;; 
;; From file gtklistitem.c 
;; 
(define-extern :int gtk_list_item_get_type )
(define-extern :GtkObject gtk_list_item_new )
(define-extern :GtkObject gtk_list_item_new_with_label :string)
(define-extern :void gtk_list_item_select :GtkObject)
(define-extern :void gtk_list_item_deselect :GtkObject)
;; 
;; From file gtkmain.c 
;; 
(define-extern :string gtk_check_version :int :int :int)
(define-extern :void gtk_exit :int)
(define-extern :string gtk_set_locale )
(define-extern :void gtk_main )
(define-extern :int gtk_main_level )
(define-extern :void gtk_main_quit )
(define-extern :int gtk_events_pending )
(define-extern :int gtk_main_iteration )
(define-extern :int gtk_main_iteration_do :boolean)
(define-extern :void gtk_main_do_event :GdkEvent)
(define-extern :int gtk_true )
(define-extern :int gtk_false )
(define-extern :void gtk_grab_add :GtkObject)
(define-extern :GtkObject gtk_grab_get_current )
(define-extern :void gtk_grab_remove :GtkObject)
(define-extern :void gtk_key_snooper_remove :int)
(define-extern :void gtk_quit_add_destroy :int :GtkObject)
(define-extern :void gtk_quit_remove :int)
(define-extern :void gtk_quit_remove_by_data :pointer)
(define-extern :void gtk_timeout_remove :int)
(define-extern :void gtk_idle_remove :int)
(define-extern :void gtk_idle_remove_by_data :pointer)
(define-extern :void gtk_input_remove :int)
(define-extern :GdkEvent gtk_get_current_event )
(define-extern :GtkObject gtk_get_event_widget :GdkEvent)
(define-extern :void gtk_propagate_event :GtkObject :GdkEvent)
;; (define-extern :boolean gtk_init_check :?int*? :?char***?)
;; (define-extern :void gtk_init :?int*? :?char***?)
;; (define-extern :void gtk_init_add :?GtkFunction? :pointer)
;; (define-extern :int gtk_key_snooper_install :?GtkKeySnoopFunc? :pointer)
;; (define-extern :int gtk_quit_add_full :int :?GtkFunction? :?GtkCallbackMarshal? :pointer :?GtkDestroyNotify?)
;; (define-extern :int gtk_quit_add :int :?GtkFunction? :pointer)
;; (define-extern :int gtk_timeout_add_full :int :?GtkFunction? :?GtkCallbackMarshal? :pointer :?GtkDestroyNotify?)
;; (define-extern :int gtk_timeout_add :int :?GtkFunction? :pointer)
;; (define-extern :int gtk_idle_add_full :int :?GtkFunction? :?GtkCallbackMarshal? :pointer :?GtkDestroyNotify?)
;; (define-extern :int gtk_idle_add :?GtkFunction? :pointer)
;; (define-extern :int gtk_idle_add_priority :int :?GtkFunction? :pointer)
;; (define-extern :int gtk_input_add_full :int :int :?GdkInputFunction? :?GtkCallbackMarshal? :pointer :?GtkDestroyNotify?)
;; 
;; From file gtkmarshal.c 
;; 
;; (define-extern :void gtk_marshal_BOOL__NONE :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_BOOL__POINTER :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_BOOL__POINTER_POINTER_INT_INT :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_BOOL__POINTER_INT_INT :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_BOOL__POINTER_INT_INT_INT :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_BOOL__POINTER_POINTER_POINTER_POINTER :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_INT__INT :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_INT__POINTER :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_INT__POINTER_CHAR_CHAR :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__BOOL :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__POINTER :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__C_CALLBACK :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__C_CALLBACK_C_CALLBACK :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__INT :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__INT_FLOAT :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__INT_FLOAT_BOOL :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__INT_INT :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__INT_INT_POINTER :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__NONE :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__POINTER_INT :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__POINTER_POINTER :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__POINTER_POINTER_POINTER :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__POINTER_INT_INT :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__POINTER_POINTER_INT_INT :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__POINTER_INT_INT_POINTER_INT_INT :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__POINTER_INT_POINTER :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__INT_POINTER_INT_INT_INT_POINTER :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__INT_POINTER_INT_INT_INT :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; (define-extern :void gtk_marshal_NONE__INT_POINTER :GtkObject :?GtkSignalFunc? :pointer :?GtkArg*?)
;; 
;; From file gtkmenu.c 
;; 
(define-extern :int gtk_menu_get_type )
(define-extern :GtkObject gtk_menu_get_attach_widget :GtkObject)
(define-extern :void gtk_menu_detach :GtkObject)
(define-extern :GtkObject gtk_menu_new )
(define-extern :void gtk_menu_append :GtkObject :GtkObject)
(define-extern :void gtk_menu_prepend :GtkObject :GtkObject)
(define-extern :void gtk_menu_insert :GtkObject :GtkObject :int)
(define-extern :void gtk_menu_popdown :GtkObject)
(define-extern :GtkObject gtk_menu_get_active :GtkObject)
(define-extern :void gtk_menu_set_active :GtkObject :int)
(define-extern :void gtk_menu_set_accel_group :GtkObject :GtkAccelGroup)
(define-extern :GtkAccelGroup gtk_menu_get_accel_group :GtkObject)
(define-extern :GtkAccelGroup gtk_menu_ensure_uline_accel_group :GtkObject)
(define-extern :GtkAccelGroup gtk_menu_get_uline_accel_group :GtkObject)
(define-extern :void gtk_menu_reposition :GtkObject)
(define-extern :void gtk_menu_set_tearoff_state :GtkObject :boolean)
(define-extern :void gtk_menu_set_title :GtkObject :string)
(define-extern :void gtk_menu_reorder_child :GtkObject :GtkObject :int)
;; (define-extern :void gtk_menu_attach_to_widget :GtkObject :GtkObject :?GtkMenuDetachFunc?)
;; (define-extern :void gtk_menu_popup :GtkObject :GtkObject :GtkObject :?GtkMenuPositionFunc? :pointer :int :int)
;; 
;; From file gtkmenubar.c 
;; 
(define-extern :int gtk_menu_bar_get_type )
(define-extern :GtkObject gtk_menu_bar_new )
(define-extern :void gtk_menu_bar_append :GtkObject :GtkObject)
(define-extern :void gtk_menu_bar_prepend :GtkObject :GtkObject)
(define-extern :void gtk_menu_bar_insert :GtkObject :GtkObject :int)
(define-extern :void gtk_menu_bar_set_shadow_type :GtkObject :int)
;; 
;; From file gtkmenufactory.c 
;; 
;; (define-extern :?GtkMenuFactory*? gtk_menu_factory_new :int)
;; (define-extern :void gtk_menu_factory_destroy :?GtkMenuFactory*?)
;; (define-extern :void gtk_menu_factory_add_entries :?GtkMenuFactory*? :?GtkMenuEntry*? :int)
;; (define-extern :void gtk_menu_factory_add_subfactory :?GtkMenuFactory*? :?GtkMenuFactory*? :string)
;; (define-extern :void gtk_menu_factory_remove_paths :?GtkMenuFactory*? :?char**? :int)
;; (define-extern :void gtk_menu_factory_remove_entries :?GtkMenuFactory*? :?GtkMenuEntry*? :int)
;; (define-extern :void gtk_menu_factory_remove_subfactory :?GtkMenuFactory*? :?GtkMenuFactory*? :string)
;; (define-extern :?GtkMenuPath*? gtk_menu_factory_find :?GtkMenuFactory*? :string)
;; 
;; From file gtkmenuitem.c 
;; 
(define-extern :int gtk_menu_item_get_type )
(define-extern :GtkObject gtk_menu_item_new )
(define-extern :GtkObject gtk_menu_item_new_with_label :string)
(define-extern :void gtk_menu_item_set_submenu :GtkObject :GtkObject)
(define-extern :void gtk_menu_item_remove_submenu :GtkObject)
(define-extern :void gtk_menu_item_set_placement :GtkObject :int)
(define-extern :void gtk_menu_item_configure :GtkObject :int :int)
(define-extern :void gtk_menu_item_select :GtkObject)
(define-extern :void gtk_menu_item_deselect :GtkObject)
(define-extern :void gtk_menu_item_activate :GtkObject)
(define-extern :void gtk_menu_item_right_justify :GtkObject)
;; 
;; From file gtkmenushell.c 
;; 
(define-extern :int gtk_menu_shell_get_type )
(define-extern :void gtk_menu_shell_append :GtkObject :GtkObject)
(define-extern :void gtk_menu_shell_prepend :GtkObject :GtkObject)
(define-extern :void gtk_menu_shell_insert :GtkObject :GtkObject :int)
(define-extern :void gtk_menu_shell_deactivate :GtkObject)
(define-extern :void gtk_menu_shell_select_item :GtkObject :GtkObject)
(define-extern :void gtk_menu_shell_deselect :GtkObject)
(define-extern :void gtk_menu_shell_activate_item :GtkObject :GtkObject :boolean)
;; 
;; From file gtkmisc.c 
;; 
(define-extern :int gtk_misc_get_type )
(define-extern :void gtk_misc_set_alignment :GtkObject :double :double)
(define-extern :void gtk_misc_set_padding :GtkObject :int :int)
;; 
;; From file gtknotebook.c 
;; 
(define-extern :int gtk_notebook_get_type )
(define-extern :GtkObject gtk_notebook_new )
(define-extern :void gtk_notebook_append_page :GtkObject :GtkObject :GtkObject)
(define-extern :void gtk_notebook_append_page_menu :GtkObject :GtkObject :GtkObject :GtkObject)
(define-extern :void gtk_notebook_prepend_page :GtkObject :GtkObject :GtkObject)
(define-extern :void gtk_notebook_prepend_page_menu :GtkObject :GtkObject :GtkObject :GtkObject)
(define-extern :void gtk_notebook_insert_page :GtkObject :GtkObject :GtkObject :int)
(define-extern :void gtk_notebook_insert_page_menu :GtkObject :GtkObject :GtkObject :GtkObject :int)
(define-extern :void gtk_notebook_remove_page :GtkObject :int)
(define-extern :int gtk_notebook_get_current_page :GtkObject)
(define-extern :GtkObject gtk_notebook_get_nth_page :GtkObject :int)
(define-extern :int gtk_notebook_page_num :GtkObject :GtkObject)
(define-extern :void gtk_notebook_set_page :GtkObject :int)
(define-extern :void gtk_notebook_next_page :GtkObject)
(define-extern :void gtk_notebook_prev_page :GtkObject)
(define-extern :void gtk_notebook_set_show_border :GtkObject :boolean)
(define-extern :void gtk_notebook_set_show_tabs :GtkObject :boolean)
(define-extern :void gtk_notebook_set_tab_pos :GtkObject :int)
(define-extern :void gtk_notebook_set_homogeneous_tabs :GtkObject :boolean)
(define-extern :void gtk_notebook_set_tab_border :GtkObject :int)
(define-extern :void gtk_notebook_set_tab_hborder :GtkObject :int)
(define-extern :void gtk_notebook_set_tab_vborder :GtkObject :int)
(define-extern :void gtk_notebook_set_scrollable :GtkObject :boolean)
(define-extern :void gtk_notebook_popup_enable :GtkObject)
(define-extern :void gtk_notebook_popup_disable :GtkObject)
(define-extern :GtkObject gtk_notebook_get_tab_label :GtkObject :GtkObject)
(define-extern :void gtk_notebook_set_tab_label :GtkObject :GtkObject :GtkObject)
(define-extern :void gtk_notebook_set_tab_label_text :GtkObject :GtkObject :string)
(define-extern :GtkObject gtk_notebook_get_menu_label :GtkObject :GtkObject)
(define-extern :void gtk_notebook_set_menu_label :GtkObject :GtkObject :GtkObject)
(define-extern :void gtk_notebook_set_menu_label_text :GtkObject :GtkObject :string)
(define-extern :void gtk_notebook_set_tab_label_packing :GtkObject :GtkObject :boolean :boolean :int)
(define-extern :void gtk_notebook_reorder_child :GtkObject :GtkObject :int)
;; (define-extern :void gtk_notebook_query_tab_label_packing :GtkObject :GtkObject :?gboolean*? :?gboolean*? :?GtkPackType*?)
;; 
;; From file gtkobject.c 
;; 
(define-extern :void gtk_object_post_arg_parsing_init )
(define-extern :void gtk_object_init_type )
(define-extern :int gtk_object_get_type )
(define-extern :void gtk_object_destroy :GtkObject)
(define-extern :void gtk_object_sink :GtkObject)
(define-extern :void gtk_object_default_construct :GtkObject)
(define-extern :void gtk_object_constructed :GtkObject)
(define-extern :void gtk_object_add_arg_type :string :int :int :int)
(define-extern :void gtk_object_set_data :GtkObject :string :pointer)
(define-extern :pointer gtk_object_get_data :GtkObject :string)
(define-extern :void gtk_object_remove_data :GtkObject :string)
(define-extern :void gtk_object_remove_no_notify :GtkObject :string)
(define-extern :void gtk_object_set_user_data :GtkObject :pointer)
(define-extern :pointer gtk_object_get_user_data :GtkObject)
(define-extern :void gtk_object_ref :GtkObject)
(define-extern :void gtk_object_unref :GtkObject)
(define-extern :void gtk_trace_referencing :GtkObject :string :int :int :boolean)
;; (define-extern :void gtk_object_class_add_signals :?GtkObjectClass*? :?guint*? :int)
;; (define-extern :int gtk_object_class_user_signal_newv :?GtkObjectClass*? :string :int :?GtkSignalMarshaller? :int :int :?GtkType*?)
;; (define-extern :void gtk_object_weakref :GtkObject :?GtkDestroyNotify? :pointer)
;; (define-extern :void gtk_object_weakunref :GtkObject :?GtkDestroyNotify? :pointer)
;; (define-extern :GtkObject gtk_object_newv :int :int :?GtkArg*?)
;; (define-extern :void gtk_object_setv :GtkObject :int :?GtkArg*?)
;; (define-extern :void gtk_object_getv :GtkObject :int :?GtkArg*?)
;; (define-extern :void gtk_object_arg_set :GtkObject :?GtkArg*? :?GtkArgInfo*?)
;; (define-extern :void gtk_object_arg_get :GtkObject :?GtkArg*? :?GtkArgInfo*?)
;; (define-extern :string gtk_object_args_collect :int :?GSList**? :?GSList**? :string :?va_list?)
;; (define-extern :string gtk_object_arg_get_info :int :string :?GtkArgInfo**?)
;; (define-extern :?GtkArg*? gtk_object_query_args :int :?guint32**? :?guint*?)
;; (define-extern :void gtk_object_set_data_by_id :GtkObject :?GQuark? :pointer)
;; (define-extern :void gtk_object_set_data_by_id_full :GtkObject :?GQuark? :pointer :?GtkDestroyNotify?)
;; (define-extern :void gtk_object_set_data_full :GtkObject :string :pointer :?GtkDestroyNotify?)
;; (define-extern :pointer gtk_object_get_data_by_id :GtkObject :?GQuark?)
;; (define-extern :void gtk_object_remove_data_by_id :GtkObject :?GQuark?)
;; (define-extern :void gtk_object_remove_no_notify_by_id :GtkObject :?GQuark?)
;; 
;; From file gtkoptionmenu.c 
;; 
(define-extern :int gtk_option_menu_get_type )
(define-extern :GtkObject gtk_option_menu_new )
(define-extern :GtkObject gtk_option_menu_get_menu :GtkObject)
(define-extern :void gtk_option_menu_set_menu :GtkObject :GtkObject)
(define-extern :void gtk_option_menu_remove_menu :GtkObject)
(define-extern :void gtk_option_menu_set_history :GtkObject :int)
;; 
;; From file gtkpacker.c 
;; 
(define-extern :int gtk_packer_get_type )
(define-extern :void gtk_packer_set_spacing :GtkObject :int)
(define-extern :GtkObject gtk_packer_new )
(define-extern :void gtk_packer_set_default_border_width :GtkObject :int)
(define-extern :void gtk_packer_set_default_pad :GtkObject :int :int)
(define-extern :void gtk_packer_set_default_ipad :GtkObject :int :int)
(define-extern :void gtk_packer_add_defaults :GtkObject :GtkObject :int :int :int)
(define-extern :void gtk_packer_add :GtkObject :GtkObject :int :int :int :int :int :int :int :int)
(define-extern :void gtk_packer_set_child_packing :GtkObject :GtkObject :int :int :int :int :int :int :int :int)
(define-extern :void gtk_packer_reorder_child :GtkObject :GtkObject :int)
;; 
;; From file gtkpaned.c 
;; 
(define-extern :int gtk_paned_get_type )
(define-extern :void gtk_paned_add1 :GtkObject :GtkObject)
(define-extern :void gtk_paned_add2 :GtkObject :GtkObject)
(define-extern :void gtk_paned_pack1 :GtkObject :GtkObject :boolean :boolean)
(define-extern :void gtk_paned_pack2 :GtkObject :GtkObject :boolean :boolean)
(define-extern :void gtk_paned_set_position :GtkObject :int)
(define-extern :void gtk_paned_set_handle_size :GtkObject :int)
(define-extern :void gtk_paned_set_gutter_size :GtkObject :int)
(define-extern :void gtk_paned_compute_position :GtkObject :int :int :int)
;; 
;; From file gtkpixmap.c 
;; 
(define-extern :int gtk_pixmap_get_type )
(define-extern :GtkObject gtk_pixmap_new :GdkWindow :GdkWindow)
(define-extern :void gtk_pixmap_set :GtkObject :GdkWindow :GdkWindow)
(define-extern :void gtk_pixmap_set_build_insensitive :GtkObject :int)
;; (define-extern :void gtk_pixmap_get :GtkObject :?GdkPixmap**? :?GdkBitmap**?)
;; 
;; From file gtkplug.c 
;; 
(define-extern :int gtk_plug_get_type )
(define-extern :void gtk_plug_construct :GtkObject :int)
(define-extern :GtkObject gtk_plug_new :int)
;; 
;; From file gtkpreview.c 
;; 
(define-extern :int gtk_preview_get_type )
(define-extern :void gtk_preview_reset )
(define-extern :void gtk_preview_uninit )
(define-extern :GtkObject gtk_preview_new :int)
(define-extern :void gtk_preview_size :GtkObject :int :int)
(define-extern :void gtk_preview_put :GtkObject :GdkWindow :GdkGC :int :int :int :int :int :int)
(define-extern :void gtk_preview_draw_row :GtkObject :string :int :int :int)
(define-extern :void gtk_preview_set_expand :GtkObject :boolean)
(define-extern :void gtk_preview_set_gamma :double)
(define-extern :void gtk_preview_set_color_cube :int :int :int :int)
(define-extern :void gtk_preview_set_install_cmap :int)
(define-extern :void gtk_preview_set_reserved :int)
(define-extern :void gtk_preview_set_dither :GtkObject :int)
(define-extern :GdkVisual gtk_preview_get_visual )
(define-extern :GdkColormap gtk_preview_get_cmap )
;; (define-extern :?GtkPreviewInfo*? gtk_preview_get_info )
;; 
;; From file gtkprogress.c 
;; 
(define-extern :int gtk_progress_get_type )
(define-extern :void gtk_progress_set_adjustment :GtkObject :GtkObject)
(define-extern :void gtk_progress_configure :GtkObject :double :double :double)
(define-extern :void gtk_progress_set_percentage :GtkObject :double)
(define-extern :double gtk_progress_get_current_percentage :GtkObject)
(define-extern :double gtk_progress_get_percentage_from_value :GtkObject :double)
(define-extern :void gtk_progress_set_value :GtkObject :double)
(define-extern :double gtk_progress_get_value :GtkObject)
(define-extern :void gtk_progress_set_show_text :GtkObject :int)
(define-extern :void gtk_progress_set_text_alignment :GtkObject :double :double)
(define-extern :void gtk_progress_set_format_string :GtkObject :string)
(define-extern :string gtk_progress_get_current_text :GtkObject)
(define-extern :string gtk_progress_get_text_from_value :GtkObject :double)
(define-extern :void gtk_progress_set_activity_mode :GtkObject :int)
;; 
;; From file gtkprogressbar.c 
;; 
(define-extern :int gtk_progress_bar_get_type )
(define-extern :GtkObject gtk_progress_bar_new )
(define-extern :GtkObject gtk_progress_bar_new_with_adjustment :GtkObject)
(define-extern :void gtk_progress_bar_update :GtkObject :double)
(define-extern :void gtk_progress_bar_set_orientation :GtkObject :int)
(define-extern :void gtk_progress_bar_set_bar_style :GtkObject :int)
(define-extern :void gtk_progress_bar_set_discrete_blocks :GtkObject :int)
(define-extern :void gtk_progress_bar_set_activity_step :GtkObject :int)
(define-extern :void gtk_progress_bar_set_activity_blocks :GtkObject :int)
;; 
;; From file gtkradiobutton.c 
;; 
(define-extern :int gtk_radio_button_get_type )
(define-extern :GtkObject gtk_radio_button_new_from_widget :GtkObject)
(define-extern :GtkObject gtk_radio_button_new_with_label_from_widget :GtkObject :string)
;; (define-extern :void gtk_radio_button_set_group :GtkObject :?GSList*?)
;; (define-extern :GtkObject gtk_radio_button_new :?GSList*?)
;; (define-extern :GtkObject gtk_radio_button_new_with_label :?GSList*? :string)
;; (define-extern :?GSList*? gtk_radio_button_group :GtkObject)
;; 
;; From file gtkradiomenuitem.c 
;; 
(define-extern :int gtk_radio_menu_item_get_type )
;; (define-extern :GtkObject gtk_radio_menu_item_new :?GSList*?)
;; (define-extern :void gtk_radio_menu_item_set_group :GtkObject :?GSList*?)
;; (define-extern :GtkObject gtk_radio_menu_item_new_with_label :?GSList*? :string)
;; (define-extern :?GSList*? gtk_radio_menu_item_group :GtkObject)
;; 
;; From file gtkrange.c 
;; 
(define-extern :int gtk_range_get_type )
(define-extern :GtkObject gtk_range_get_adjustment :GtkObject)
(define-extern :void gtk_range_set_update_policy :GtkObject :int)
(define-extern :void gtk_range_set_adjustment :GtkObject :GtkObject)
(define-extern :void gtk_range_draw_background :GtkObject)
(define-extern :void gtk_range_clear_background :GtkObject)
(define-extern :void gtk_range_draw_trough :GtkObject)
(define-extern :void gtk_range_draw_slider :GtkObject)
(define-extern :void gtk_range_draw_step_forw :GtkObject)
(define-extern :void gtk_range_draw_step_back :GtkObject)
(define-extern :void gtk_range_slider_update :GtkObject)
(define-extern :void gtk_range_default_hslider_update :GtkObject)
(define-extern :void gtk_range_default_vslider_update :GtkObject)
(define-extern :void gtk_range_default_hmotion :GtkObject :int :int)
(define-extern :void gtk_range_default_vmotion :GtkObject :int :int)
;; (define-extern :int gtk_range_trough_click :GtkObject :int :int :?gfloat*?)
;; (define-extern :int gtk_range_default_htrough_click :GtkObject :int :int :?gfloat*?)
;; (define-extern :int gtk_range_default_vtrough_click :GtkObject :int :int :?gfloat*?)
;; 
;; From file gtkrc.c 
;; 
(define-extern :string gtk_rc_get_theme_dir )
(define-extern :string gtk_rc_get_module_dir )
(define-extern :void gtk_rc_add_default_file :string)
(define-extern :void gtk_rc_init )
(define-extern :void gtk_rc_parse_string :string)
(define-extern :void gtk_rc_parse :string)
(define-extern :boolean gtk_rc_reparse_all )
(define-extern :GtkStyle gtk_rc_get_style :GtkObject)
(define-extern :string gtk_rc_find_module_in_path :string)
(define-extern :GdkWindow gtk_rc_load_image :GdkColormap :GdkColor :string)
;; (define-extern :void gtk_rc_set_default_files :?gchar**?)
;; (define-extern :?gchar**? gtk_rc_get_default_files )
;; (define-extern :?GtkRcStyle*? gtk_rc_style_new )
;; (define-extern :void gtk_rc_style_ref :?GtkRcStyle*?)
;; (define-extern :void gtk_rc_style_unref :?GtkRcStyle*?)
;; (define-extern :void gtk_rc_add_widget_name_style :?GtkRcStyle*? :string)
;; (define-extern :void gtk_rc_add_widget_class_style :?GtkRcStyle*? :string)
;; (define-extern :void gtk_rc_add_class_style :?GtkRcStyle*? :string)
;; (define-extern :string gtk_rc_find_pixmap_in_path :?GScanner*? :string)
;; (define-extern :int gtk_rc_parse_state :?GScanner*? :?GtkStateType*?)
;; (define-extern :int gtk_rc_parse_priority :?GScanner*? :?GtkPathPriorityType*?)
;; (define-extern :int gtk_rc_parse_color :?GScanner*? :GdkColor)
;; (define-extern :void gtk_rc_set_image_loader :?GtkImageLoader?)
;; 
;; From file gtkruler.c 
;; 
(define-extern :int gtk_ruler_get_type )
(define-extern :void gtk_ruler_set_metric :GtkObject :int)
(define-extern :void gtk_ruler_set_range :GtkObject :double :double :double :double)
(define-extern :void gtk_ruler_draw_ticks :GtkObject)
(define-extern :void gtk_ruler_draw_pos :GtkObject)
;; 
;; From file gtkscale.c 
;; 
(define-extern :int gtk_scale_get_type )
(define-extern :void gtk_scale_set_digits :GtkObject :int)
(define-extern :void gtk_scale_set_draw_value :GtkObject :boolean)
(define-extern :void gtk_scale_set_value_pos :GtkObject :int)
(define-extern :int gtk_scale_get_value_width :GtkObject)
(define-extern :void gtk_scale_draw_value :GtkObject)
;; 
;; From file gtkscrollbar.c 
;; 
(define-extern :int gtk_scrollbar_get_type )
;; 
;; From file gtkscrolledwindow.c 
;; 
(define-extern :int gtk_scrolled_window_get_type )
(define-extern :GtkObject gtk_scrolled_window_new :GtkObject :GtkObject)
(define-extern :void gtk_scrolled_window_set_hadjustment :GtkObject :GtkObject)
(define-extern :void gtk_scrolled_window_set_vadjustment :GtkObject :GtkObject)
(define-extern :GtkObject gtk_scrolled_window_get_hadjustment :GtkObject)
(define-extern :GtkObject gtk_scrolled_window_get_vadjustment :GtkObject)
(define-extern :void gtk_scrolled_window_set_policy :GtkObject :int :int)
(define-extern :void gtk_scrolled_window_set_placement :GtkObject :int)
(define-extern :void gtk_scrolled_window_add_with_viewport :GtkObject :GtkObject)
;; 
;; From file gtkselection.c 
;; 
(define-extern :int gtk_selection_owner_set :GtkObject :GdkAtom :int)
(define-extern :void gtk_selection_add_target :GtkObject :GdkAtom :GdkAtom :int)
(define-extern :void gtk_selection_remove_all :GtkObject)
(define-extern :int gtk_selection_convert :GtkObject :GdkAtom :GdkAtom :int)
;; (define-extern :?GtkTargetList*? gtk_target_list_new :?GtkTargetEntry*? :int)
;; (define-extern :void gtk_target_list_ref :?GtkTargetList*?)
;; (define-extern :void gtk_target_list_unref :?GtkTargetList*?)
;; (define-extern :void gtk_target_list_add :?GtkTargetList*? :GdkAtom :int :int)
;; (define-extern :void gtk_target_list_add_table :?GtkTargetList*? :?GtkTargetEntry*? :int)
;; (define-extern :void gtk_target_list_remove :?GtkTargetList*? :GdkAtom)
;; (define-extern :boolean gtk_target_list_find :?GtkTargetList*? :GdkAtom :?guint*?)
;; (define-extern :void gtk_selection_add_targets :GtkObject :GdkAtom :?GtkTargetEntry*? :int)
;; (define-extern :void gtk_selection_data_set :?GtkSelectionData*? :GdkAtom :int :string :int)
;; (define-extern :int gtk_selection_clear :GtkObject :?GdkEventSelection*?)
;; (define-extern :int gtk_selection_request :GtkObject :?GdkEventSelection*?)
;; (define-extern :int gtk_selection_incr_event :GdkWindow :?GdkEventProperty*?)
;; (define-extern :int gtk_selection_notify :GtkObject :?GdkEventSelection*?)
;; (define-extern :int gtk_selection_property_notify :GtkObject :?GdkEventProperty*?)
;; (define-extern :?GtkSelectioData*? gtk_selection_data_copy :?GtkSelectionData*?)
;; (define-extern :void gtk_selection_data_free :?GtkSelectionData*?)
;; 
;; From file gtkseparator.c 
;; 
(define-extern :int gtk_separator_get_type )
;; 
;; From file gtksignal.c 
;; 
(define-extern :void gtk_signal_init )
(define-extern :int gtk_signal_lookup :string :int)
(define-extern :string gtk_signal_name :int)
(define-extern :void gtk_signal_emit_stop :GtkObject :int)
(define-extern :void gtk_signal_emit_stop_by_name :GtkObject :string)
(define-extern :int gtk_signal_n_emissions :GtkObject :int)
(define-extern :int gtk_signal_n_emissions_by_name :GtkObject :string)
(define-extern :void gtk_signal_disconnect :GtkObject :int)
(define-extern :void gtk_signal_disconnect_by_data :GtkObject :pointer)
(define-extern :void gtk_signal_handler_block :GtkObject :int)
(define-extern :void gtk_signal_handler_block_by_data :GtkObject :pointer)
(define-extern :void gtk_signal_handler_unblock :GtkObject :int)
(define-extern :void gtk_signal_handler_unblock_by_data :GtkObject :pointer)
(define-extern :void gtk_signal_handlers_destroy :GtkObject)
(define-extern :int gtk_signal_handler_pending :GtkObject :int :boolean)
(define-extern :int gtk_signal_handler_pending_by_id :GtkObject :int :boolean)
(define-extern :void gtk_signal_remove_emission_hook :int :int)
;; (define-extern :int gtk_signal_newv :string :int :int :int :?GtkSignalMarshaller? :int :int :?GtkType*?)
;; (define-extern :?GtkSignalQuery*? gtk_signal_query :int)
;; (define-extern :void gtk_signal_emitv :GtkObject :int :?GtkArg*?)
;; (define-extern :void gtk_signal_emitv_by_name :GtkObject :string :?GtkArg*?)
;; (define-extern :int gtk_signal_connect :GtkObject :string :?GtkSignalFunc? :pointer)
;; (define-extern :int gtk_signal_connect_after :GtkObject :string :?GtkSignalFunc? :pointer)
;; (define-extern :int gtk_signal_connect_full :GtkObject :string :?GtkSignalFunc? :?GtkCallbackMarshal? :pointer :?GtkDestroyNotify? :int :int)
;; (define-extern :int gtk_signal_connect_object :GtkObject :string :?GtkSignalFunc? :GtkObject)
;; (define-extern :int gtk_signal_connect_object_after :GtkObject :string :?GtkSignalFunc? :GtkObject)
;; (define-extern :void gtk_signal_connect_while_alive :GtkObject :string :?GtkSignalFunc? :pointer :GtkObject)
;; (define-extern :void gtk_signal_connect_object_while_alive :GtkObject :string :?GtkSignalFunc? :GtkObject)
;; (define-extern :void gtk_signal_disconnect_by_func :GtkObject :?GtkSignalFunc? :pointer)
;; (define-extern :void gtk_signal_handler_block_by_func :GtkObject :?GtkSignalFunc? :pointer)
;; (define-extern :void gtk_signal_handler_unblock_by_func :GtkObject :?GtkSignalFunc? :pointer)
;; (define-extern :void gtk_signal_set_funcs :?GtkSignalMarshal? :?GtkSignalDestroy?)
;; (define-extern :int gtk_signal_handler_pending_by_func :GtkObject :int :boolean :?GtkSignalFunc? :pointer)
;; (define-extern :int gtk_signal_add_emission_hook :int :?GtkEmissionHook? :pointer)
;; (define-extern :int gtk_signal_add_emission_hook_full :int :?GtkEmissionHook? :pointer :?GDestroyNotify?)
;; 
;; From file gtksocket.c 
;; 
(define-extern :int gtk_socket_get_type )
(define-extern :GtkObject gtk_socket_new )
(define-extern :void gtk_socket_steal :GtkObject :int)
;; 
;; From file gtkspinbutton.c 
;; 
(define-extern :int gtk_spin_button_get_type )
(define-extern :void gtk_spin_button_update :GtkObject)
(define-extern :void gtk_spin_button_configure :GtkObject :GtkObject :double :int)
(define-extern :GtkObject gtk_spin_button_new :GtkObject :double :int)
(define-extern :void gtk_spin_button_set_adjustment :GtkObject :GtkObject)
(define-extern :GtkObject gtk_spin_button_get_adjustment :GtkObject)
(define-extern :void gtk_spin_button_set_digits :GtkObject :int)
(define-extern :double gtk_spin_button_get_value_as_float :GtkObject)
(define-extern :int gtk_spin_button_get_value_as_int :GtkObject)
(define-extern :void gtk_spin_button_set_value :GtkObject :double)
(define-extern :void gtk_spin_button_set_update_policy :GtkObject :int)
(define-extern :void gtk_spin_button_set_numeric :GtkObject :boolean)
(define-extern :void gtk_spin_button_set_wrap :GtkObject :boolean)
(define-extern :void gtk_spin_button_set_shadow_type :GtkObject :int)
(define-extern :void gtk_spin_button_set_snap_to_ticks :GtkObject :boolean)
(define-extern :void gtk_spin_button_spin :GtkObject :int :double)
;; 
;; From file gtkstatusbar.c 
;; 
(define-extern :int gtk_statusbar_get_type )
(define-extern :GtkObject gtk_statusbar_new )
(define-extern :int gtk_statusbar_get_context_id :GtkObject :string)
(define-extern :int gtk_statusbar_push :GtkObject :int :string)
(define-extern :void gtk_statusbar_pop :GtkObject :int)
(define-extern :void gtk_statusbar_remove :GtkObject :int :int)
;; 
;; From file gtkstyle.c 
;; 
(define-extern :GtkStyle gtk_style_copy :GtkStyle)
(define-extern :GtkStyle gtk_style_new )
(define-extern :GtkStyle gtk_style_attach :GtkStyle :GdkWindow)
(define-extern :void gtk_style_detach :GtkStyle)
(define-extern :GtkStyle gtk_style_ref :GtkStyle)
(define-extern :void gtk_style_unref :GtkStyle)
(define-extern :void gtk_draw_hline :GtkStyle :GdkWindow :int :int :int :int)
(define-extern :void gtk_draw_vline :GtkStyle :GdkWindow :int :int :int :int)
(define-extern :void gtk_draw_shadow :GtkStyle :GdkWindow :int :int :int :int :int :int)
(define-extern :void gtk_draw_arrow :GtkStyle :GdkWindow :int :int :int :boolean :int :int :int :int)
(define-extern :void gtk_draw_diamond :GtkStyle :GdkWindow :int :int :int :int :int :int)
(define-extern :void gtk_draw_oval :GtkStyle :GdkWindow :int :int :int :int :int :int)
(define-extern :void gtk_draw_string :GtkStyle :GdkWindow :int :int :int :string)
(define-extern :void gtk_draw_box :GtkStyle :GdkWindow :int :int :int :int :int :int)
(define-extern :void gtk_draw_flat_box :GtkStyle :GdkWindow :int :int :int :int :int :int)
(define-extern :void gtk_draw_check :GtkStyle :GdkWindow :int :int :int :int :int :int)
(define-extern :void gtk_draw_option :GtkStyle :GdkWindow :int :int :int :int :int :int)
(define-extern :void gtk_draw_cross :GtkStyle :GdkWindow :int :int :int :int :int :int)
(define-extern :void gtk_draw_ramp :GtkStyle :GdkWindow :int :int :int :int :int :int :int)
(define-extern :void gtk_draw_tab :GtkStyle :GdkWindow :int :int :int :int :int :int)
(define-extern :void gtk_draw_shadow_gap :GtkStyle :GdkWindow :int :int :int :int :int :int :int :int :int)
(define-extern :void gtk_draw_box_gap :GtkStyle :GdkWindow :int :int :int :int :int :int :int :int :int)
(define-extern :void gtk_draw_extension :GtkStyle :GdkWindow :int :int :int :int :int :int :int)
(define-extern :void gtk_draw_focus :GtkStyle :GdkWindow :int :int :int :int)
(define-extern :void gtk_draw_slider :GtkStyle :GdkWindow :int :int :int :int :int :int :int)
(define-extern :void gtk_draw_handle :GtkStyle :GdkWindow :int :int :int :int :int :int :int)
(define-extern :void gtk_style_set_background :GtkStyle :GdkWindow :int)
;; (define-extern :void gtk_draw_polygon :GtkStyle :GdkWindow :int :int :?GdkPoint*? :int :boolean)
;; (define-extern :void gtk_style_apply_default_background :GtkStyle :GdkWindow :boolean :int :?GdkRectangle*? :int :int :int :int)
;; (define-extern :void gtk_paint_hline :GtkStyle :GdkWindow :int :?GdkRectangle*? :GtkObject :string :int :int :int)
;; (define-extern :void gtk_paint_vline :GtkStyle :GdkWindow :int :?GdkRectangle*? :GtkObject :string :int :int :int)
;; (define-extern :void gtk_paint_shadow :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int)
;; (define-extern :void gtk_paint_polygon :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :?GdkPoint*? :int :boolean)
;; (define-extern :void gtk_paint_arrow :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :boolean :int :int :int :int)
;; (define-extern :void gtk_paint_diamond :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int)
;; (define-extern :void gtk_paint_oval :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int)
;; (define-extern :void gtk_paint_string :GtkStyle :GdkWindow :int :?GdkRectangle*? :GtkObject :string :int :int :string)
;; (define-extern :void gtk_paint_box :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int)
;; (define-extern :void gtk_paint_flat_box :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int)
;; (define-extern :void gtk_paint_check :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int)
;; (define-extern :void gtk_paint_option :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int)
;; (define-extern :void gtk_paint_cross :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int)
;; (define-extern :void gtk_paint_ramp :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int :int)
;; (define-extern :void gtk_paint_tab :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int)
;; (define-extern :void gtk_paint_shadow_gap :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int :int :int :int)
;; (define-extern :void gtk_paint_box_gap :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int :int :int :int)
;; (define-extern :void gtk_paint_extension :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int :int)
;; (define-extern :void gtk_paint_focus :GtkStyle :GdkWindow :?GdkRectangle*? :GtkObject :string :int :int :int :int)
;; (define-extern :void gtk_paint_slider :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int :int)
;; (define-extern :void gtk_paint_handle :GtkStyle :GdkWindow :int :int :?GdkRectangle*? :GtkObject :string :int :int :int :int :int)
;; 
;; From file gtktable.c 
;; 
(define-extern :int gtk_table_get_type )
(define-extern :GtkObject gtk_table_new :int :int :boolean)
(define-extern :void gtk_table_resize :GtkObject :int :int)
(define-extern :void gtk_table_attach :GtkObject :GtkObject :int :int :int :int :int :int :int :int)
(define-extern :void gtk_table_attach_defaults :GtkObject :GtkObject :int :int :int :int)
(define-extern :void gtk_table_set_row_spacing :GtkObject :int :int)
(define-extern :void gtk_table_set_col_spacing :GtkObject :int :int)
(define-extern :void gtk_table_set_row_spacings :GtkObject :int)
(define-extern :void gtk_table_set_col_spacings :GtkObject :int)
(define-extern :void gtk_table_set_homogeneous :GtkObject :boolean)
;; 
;; From file gtktearoffmenuitem.c 
;; 
(define-extern :int gtk_tearoff_menu_item_get_type )
(define-extern :GtkObject gtk_tearoff_menu_item_new )
;; 
;; From file gtktext.c 
;; 
(define-extern :int gtk_text_get_type )
(define-extern :GtkObject gtk_text_new :GtkObject :GtkObject)
(define-extern :void gtk_text_set_word_wrap :GtkObject :int)
(define-extern :void gtk_text_set_line_wrap :GtkObject :int)
(define-extern :void gtk_text_set_editable :GtkObject :boolean)
(define-extern :void gtk_text_set_adjustments :GtkObject :GtkObject :GtkObject)
(define-extern :void gtk_text_set_point :GtkObject :int)
(define-extern :int gtk_text_get_point :GtkObject)
(define-extern :int gtk_text_get_length :GtkObject)
(define-extern :void gtk_text_freeze :GtkObject)
(define-extern :void gtk_text_thaw :GtkObject)
(define-extern :void gtk_text_insert :GtkObject :GdkFont :GdkColor :GdkColor :string :int)
(define-extern :int gtk_text_backward_delete :GtkObject :int)
(define-extern :int gtk_text_forward_delete :GtkObject :int)
;; 
;; From file gtkthemes.c 
;; 
;; (define-extern :?GtkThemeEngine*? gtk_theme_engine_get :string)
;; (define-extern :void gtk_theme_engine_ref :?GtkThemeEngine*?)
;; (define-extern :void gtk_theme_engine_unref :?GtkThemeEngine*?)
;; 
;; From file gtktipsquery.c 
;; 
(define-extern :int gtk_tips_query_get_type )
(define-extern :GtkObject gtk_tips_query_new )
(define-extern :void gtk_tips_query_set_labels :GtkObject :string :string)
(define-extern :void gtk_tips_query_set_caller :GtkObject :GtkObject)
(define-extern :void gtk_tips_query_start_query :GtkObject)
(define-extern :void gtk_tips_query_stop_query :GtkObject)
;; 
;; From file gtktogglebutton.c 
;; 
(define-extern :int gtk_toggle_button_get_type )
(define-extern :GtkObject gtk_toggle_button_new )
(define-extern :GtkObject gtk_toggle_button_new_with_label :string)
(define-extern :void gtk_toggle_button_set_mode :GtkObject :boolean)
(define-extern :void gtk_toggle_button_set_active :GtkObject :boolean)
(define-extern :boolean gtk_toggle_button_get_active :GtkObject)
(define-extern :void gtk_toggle_button_toggled :GtkObject)
;; 
;; From file gtktoolbar.c 
;; 
(define-extern :int gtk_toolbar_get_type )
(define-extern :GtkObject gtk_toolbar_new :int :int)
(define-extern :void gtk_toolbar_append_space :GtkObject)
(define-extern :void gtk_toolbar_prepend_space :GtkObject)
(define-extern :void gtk_toolbar_insert_space :GtkObject :int)
(define-extern :void gtk_toolbar_append_widget :GtkObject :GtkObject :string :string)
(define-extern :void gtk_toolbar_prepend_widget :GtkObject :GtkObject :string :string)
(define-extern :void gtk_toolbar_insert_widget :GtkObject :GtkObject :string :string :int)
(define-extern :void gtk_toolbar_set_orientation :GtkObject :int)
(define-extern :void gtk_toolbar_set_style :GtkObject :int)
(define-extern :void gtk_toolbar_set_space_size :GtkObject :int)
(define-extern :void gtk_toolbar_set_space_style :GtkObject :int)
(define-extern :void gtk_toolbar_set_tooltips :GtkObject :int)
(define-extern :void gtk_toolbar_set_button_relief :GtkObject :int)
(define-extern :int gtk_toolbar_get_button_relief :GtkObject)
;; (define-extern :GtkObject gtk_toolbar_append_item :GtkObject :string :string :string :GtkObject :?GtkSignalFunc? :pointer)
;; (define-extern :GtkObject gtk_toolbar_prepend_item :GtkObject :string :string :string :GtkObject :?GtkSignalFunc? :pointer)
;; (define-extern :GtkObject gtk_toolbar_insert_item :GtkObject :string :string :string :GtkObject :?GtkSignalFunc? :pointer :int)
;; (define-extern :GtkObject gtk_toolbar_append_element :GtkObject :int :GtkObject :string :string :string :GtkObject :?GtkSignalFunc? :pointer)
;; (define-extern :GtkObject gtk_toolbar_prepend_element :GtkObject :int :GtkObject :string :string :string :GtkObject :?GtkSignalFunc? :pointer)
;; (define-extern :GtkObject gtk_toolbar_insert_element :GtkObject :int :GtkObject :string :string :string :GtkObject :?GtkSignalFunc? :pointer :int)
;; 
;; From file gtktooltips.c 
;; 
(define-extern :int gtk_tooltips_get_type )
(define-extern :GtkObject gtk_tooltips_new )
(define-extern :void gtk_tooltips_force_window :GtkObject)
(define-extern :void gtk_tooltips_enable :GtkObject)
(define-extern :void gtk_tooltips_disable :GtkObject)
(define-extern :void gtk_tooltips_set_delay :GtkObject :int)
(define-extern :void gtk_tooltips_set_tip :GtkObject :GtkObject :string :string)
(define-extern :void gtk_tooltips_set_colors :GtkObject :GdkColor :GdkColor)
;; (define-extern :?GtkTooltipsData*? gtk_tooltips_data_get :GtkObject)
;; 
;; From file gtktree.c 
;; 
(define-extern :int gtk_tree_get_type )
(define-extern :GtkObject gtk_tree_new )
(define-extern :void gtk_tree_append :GtkObject :GtkObject)
(define-extern :void gtk_tree_prepend :GtkObject :GtkObject)
(define-extern :void gtk_tree_insert :GtkObject :GtkObject :int)
(define-extern :int gtk_tree_child_position :GtkObject :GtkObject)
(define-extern :void gtk_tree_clear_items :GtkObject :int :int)
(define-extern :void gtk_tree_remove_item :GtkObject :GtkObject)
(define-extern :void gtk_tree_select_child :GtkObject :GtkObject)
(define-extern :void gtk_tree_select_item :GtkObject :int)
(define-extern :void gtk_tree_unselect_child :GtkObject :GtkObject)
(define-extern :void gtk_tree_unselect_item :GtkObject :int)
(define-extern :void gtk_tree_set_selection_mode :GtkObject :int)
(define-extern :void gtk_tree_set_view_mode :GtkObject :int)
(define-extern :void gtk_tree_set_view_lines :GtkObject :int)
;; (define-extern :void gtk_tree_remove_items :GtkObject :?GList*?)
;; 
;; From file gtktreeitem.c 
;; 
(define-extern :int gtk_tree_item_get_type )
(define-extern :GtkObject gtk_tree_item_new )
(define-extern :GtkObject gtk_tree_item_new_with_label :string)
(define-extern :void gtk_tree_item_set_subtree :GtkObject :GtkObject)
(define-extern :void gtk_tree_item_select :GtkObject)
(define-extern :void gtk_tree_item_deselect :GtkObject)
(define-extern :void gtk_tree_item_expand :GtkObject)
(define-extern :void gtk_tree_item_collapse :GtkObject)
(define-extern :void gtk_tree_item_remove_subtree :GtkObject)
;; 
;; From file gtktypebuiltins_evals.c 
;; 
;; 
;; From file gtktypebuiltins_ids.c 
;; 
;; 
;; From file gtktypebuiltins_vars.c 
;; 
;; 
;; From file gtktypeutils.c 
;; 
(define-extern :void gtk_type_init )
(define-extern :void gtk_type_set_chunk_alloc :int :int)
(define-extern :string gtk_type_name :int)
(define-extern :int gtk_type_from_name :string)
(define-extern :int gtk_type_parent :int)
(define-extern :pointer gtk_type_parent_class :int)
(define-extern :pointer gtk_type_class :int)
(define-extern :pointer gtk_type_new :int)
(define-extern :void gtk_type_free :int :pointer)
(define-extern :void gtk_type_describe_heritage :int)
(define-extern :void gtk_type_describe_tree :int :boolean)
(define-extern :boolean gtk_type_is_a :int :int)
(define-extern :void gtk_type_set_varargs_type :int :int)
(define-extern :int gtk_type_get_varargs_type :int)
(define-extern :int gtk_identifier_get_type )
;; (define-extern :int gtk_type_unique :int :?GtkTypeInfo*?)
;; (define-extern :?GList*? gtk_type_children_types :int)
;; (define-extern :?GtkTypeObject*? gtk_type_check_object_cast :?GtkTypeObject*? :int)
;; (define-extern :?GtkTypeClass*? gtk_type_check_class_cast :?GtkTypeClass*? :int)
;; (define-extern :?GtkEnumValue*? gtk_type_enum_get_values :int)
;; (define-extern :?GtkFlagValue*? gtk_type_flags_get_values :int)
;; (define-extern :?GtkEnumValue*? gtk_type_enum_find_value :int :string)
;; (define-extern :?GtkFlagValue*? gtk_type_flags_find_value :int :string)
;; (define-extern :int gtk_type_register_enum :string :?GtkEnumValue*?)
;; (define-extern :int gtk_type_register_flags :string :?GtkFlagValue*?)
;; (define-extern :?GtkTypeQuery*? gtk_type_query :int)
;; 
;; From file gtkvbbox.c 
;; 
(define-extern :int gtk_vbutton_box_get_type )
(define-extern :GtkObject gtk_vbutton_box_new )
(define-extern :void gtk_vbutton_box_set_spacing_default :int)
(define-extern :void gtk_vbutton_box_set_layout_default :int)
(define-extern :int gtk_vbutton_box_get_spacing_default )
(define-extern :int gtk_vbutton_box_get_layout_default )
;; 
;; From file gtkvbox.c 
;; 
(define-extern :int gtk_vbox_get_type )
(define-extern :GtkObject gtk_vbox_new :boolean :int)
;; 
;; From file gtkviewport.c 
;; 
(define-extern :int gtk_viewport_get_type )
(define-extern :GtkObject gtk_viewport_new :GtkObject :GtkObject)
(define-extern :GtkObject gtk_viewport_get_hadjustment :GtkObject)
(define-extern :GtkObject gtk_viewport_get_vadjustment :GtkObject)
(define-extern :void gtk_viewport_set_hadjustment :GtkObject :GtkObject)
(define-extern :void gtk_viewport_set_vadjustment :GtkObject :GtkObject)
(define-extern :void gtk_viewport_set_shadow_type :GtkObject :int)
;; 
;; From file gtkvpaned.c 
;; 
(define-extern :int gtk_vpaned_get_type )
(define-extern :GtkObject gtk_vpaned_new )
;; 
;; From file gtkvruler.c 
;; 
(define-extern :int gtk_vruler_get_type )
(define-extern :GtkObject gtk_vruler_new )
;; 
;; From file gtkvscale.c 
;; 
(define-extern :int gtk_vscale_get_type )
(define-extern :GtkObject gtk_vscale_new :GtkObject)
;; 
;; From file gtkvscrollbar.c 
;; 
(define-extern :int gtk_vscrollbar_get_type )
(define-extern :GtkObject gtk_vscrollbar_new :GtkObject)
;; 
;; From file gtkvseparator.c 
;; 
(define-extern :int gtk_vseparator_get_type )
(define-extern :GtkObject gtk_vseparator_new )
;; 
;; From file gtkwidget.c 
;; 
(define-extern :int gtk_widget_get_type )
(define-extern :void gtk_widget_unparent :GtkObject)
(define-extern :void gtk_widget_destroy :GtkObject)
(define-extern :void gtk_widget_show :GtkObject)
(define-extern :void gtk_widget_show_now :GtkObject)
(define-extern :void gtk_widget_hide :GtkObject)
(define-extern :int gtk_widget_hide_on_delete :GtkObject)
(define-extern :void gtk_widget_show_all :GtkObject)
(define-extern :void gtk_widget_hide_all :GtkObject)
(define-extern :void gtk_widget_map :GtkObject)
(define-extern :void gtk_widget_unmap :GtkObject)
(define-extern :void gtk_widget_realize :GtkObject)
(define-extern :void gtk_widget_unrealize :GtkObject)
(define-extern :void gtk_widget_queue_draw_area :GtkObject :int :int :int :int)
(define-extern :void gtk_widget_queue_draw :GtkObject)
(define-extern :void gtk_widget_queue_clear_area :GtkObject :int :int :int :int)
(define-extern :void gtk_widget_queue_clear :GtkObject)
(define-extern :void gtk_widget_queue_resize :GtkObject)
(define-extern :void gtk_widget_draw_focus :GtkObject)
(define-extern :void gtk_widget_draw_default :GtkObject)
(define-extern :void gtk_widget_lock_accelerators :GtkObject)
(define-extern :void gtk_widget_unlock_accelerators :GtkObject)
(define-extern :boolean gtk_widget_accelerators_locked :GtkObject)
(define-extern :void gtk_widget_add_accelerator :GtkObject :string :GtkAccelGroup :int :int :int)
(define-extern :void gtk_widget_remove_accelerator :GtkObject :GtkAccelGroup :int :int)
(define-extern :void gtk_widget_remove_accelerators :GtkObject :string :boolean)
(define-extern :int gtk_widget_accelerator_signal :GtkObject :GtkAccelGroup :int :int)
(define-extern :int gtk_widget_event :GtkObject :GdkEvent)
(define-extern :boolean gtk_widget_activate :GtkObject)
(define-extern :boolean gtk_widget_set_scroll_adjustments :GtkObject :GtkObject :GtkObject)
(define-extern :void gtk_widget_reparent :GtkObject :GtkObject)
(define-extern :void gtk_widget_popup :GtkObject :int :int)
(define-extern :void gtk_widget_grab_focus :GtkObject)
(define-extern :void gtk_widget_grab_default :GtkObject)
(define-extern :void gtk_widget_set_name :GtkObject :string)
(define-extern :string gtk_widget_get_name :GtkObject)
(define-extern :void gtk_widget_set_state :GtkObject :int)
(define-extern :void gtk_widget_set_app_paintable :GtkObject :boolean)
(define-extern :void gtk_widget_set_sensitive :GtkObject :boolean)
(define-extern :void gtk_widget_set_parent :GtkObject :GtkObject)
(define-extern :void gtk_widget_set_style :GtkObject :GtkStyle)
(define-extern :void gtk_widget_ensure_style :GtkObject)
(define-extern :void gtk_widget_set_rc_style :GtkObject)
(define-extern :void gtk_widget_restore_default_style :GtkObject)
(define-extern :GtkStyle gtk_widget_get_style :GtkObject)
(define-extern :void gtk_widget_reset_rc_styles :GtkObject)
(define-extern :void gtk_widget_set_default_style :GtkStyle)
(define-extern :GtkStyle gtk_widget_get_default_style )
(define-extern :void gtk_widget_push_style :GtkStyle)
(define-extern :void gtk_widget_pop_style )
(define-extern :void gtk_widget_set_parent_window :GtkObject :GdkWindow)
(define-extern :GdkWindow gtk_widget_get_parent_window :GtkObject)
(define-extern :void gtk_widget_set_uposition :GtkObject :int :int)
(define-extern :void gtk_widget_set_usize :GtkObject :int :int)
(define-extern :void gtk_widget_set_events :GtkObject :int)
(define-extern :void gtk_widget_add_events :GtkObject :int)
(define-extern :void gtk_widget_set_extension_events :GtkObject :int)
(define-extern :GtkObject gtk_widget_get_toplevel :GtkObject)
(define-extern :GtkObject gtk_widget_get_ancestor :GtkObject :int)
(define-extern :GdkColormap gtk_widget_get_colormap :GtkObject)
(define-extern :GdkVisual gtk_widget_get_visual :GtkObject)
(define-extern :void gtk_widget_set_colormap :GtkObject :GdkColormap)
(define-extern :void gtk_widget_set_visual :GtkObject :GdkVisual)
(define-extern :int gtk_widget_get_events :GtkObject)
(define-extern :int gtk_widget_get_extension_events :GtkObject)
(define-extern :int gtk_widget_is_ancestor :GtkObject :GtkObject)
(define-extern :void gtk_widget_set_composite_name :GtkObject :string)
(define-extern :string gtk_widget_get_composite_name :GtkObject)
(define-extern :void gtk_widget_push_composite_child )
(define-extern :void gtk_widget_pop_composite_child )
(define-extern :void gtk_widget_push_colormap :GdkColormap)
(define-extern :void gtk_widget_push_visual :GdkVisual)
(define-extern :void gtk_widget_pop_colormap )
(define-extern :void gtk_widget_pop_visual )
(define-extern :void gtk_widget_set_default_colormap :GdkColormap)
(define-extern :void gtk_widget_set_default_visual :GdkVisual)
(define-extern :GdkColormap gtk_widget_get_default_colormap )
(define-extern :GdkVisual gtk_widget_get_default_visual )
(define-extern :void gtk_widget_shape_combine_mask :GtkObject :GdkWindow :int :int)
(define-extern :void gtk_widget_reset_shapes :GtkObject)
(define-extern :void gtk_widget_ref :GtkObject)
(define-extern :void gtk_widget_unref :GtkObject)
;; (define-extern :GtkObject gtk_widget_newv :int :int :?GtkArg*?)
;; (define-extern :void gtk_widget_get :GtkObject :?GtkArg*?)
;; (define-extern :void gtk_widget_getv :GtkObject :int :?GtkArg*?)
;; (define-extern :void gtk_widget_setv :GtkObject :int :?GtkArg*?)
;; (define-extern :void gtk_widget_destroyed :GtkObject :?GtkWidget**?)
;; (define-extern :void gtk_widget_draw :GtkObject :?GdkRectangle*?)
;; (define-extern :void gtk_widget_size_request :GtkObject :?GtkRequisition*?)
;; (define-extern :void gtk_widget_get_child_requisition :GtkObject :?GtkRequisition*?)
;; (define-extern :void gtk_widget_size_allocate :GtkObject :?GtkAllocation*?)
;; (define-extern :int gtk_widget_intersect :GtkObject :?GdkRectangle*? :?GdkRectangle*?)
;; (define-extern :void gtk_widget_modify_style :GtkObject :?GtkRcStyle*?)
;; (define-extern :void gtk_widget_get_pointer :GtkObject :?gint*? :?gint*?)
;; (define-extern :void gtk_widget_path :GtkObject :?guint*? :?gchar**? :?gchar**?)
;; (define-extern :void gtk_widget_class_path :GtkObject :?guint*? :?gchar**? :?gchar**?)
;; 
;; From file gtkwindow.c 
;; 
(define-extern :int gtk_window_get_type )
(define-extern :GtkObject gtk_window_new :int)
(define-extern :void gtk_window_set_title :GtkObject :string)
(define-extern :void gtk_window_set_wmclass :GtkObject :string :string)
(define-extern :void gtk_window_set_focus :GtkObject :GtkObject)
(define-extern :void gtk_window_set_default :GtkObject :GtkObject)
(define-extern :void gtk_window_set_policy :GtkObject :int :int :int)
(define-extern :void gtk_window_add_accel_group :GtkObject :GtkAccelGroup)
(define-extern :void gtk_window_remove_accel_group :GtkObject :GtkAccelGroup)
(define-extern :void gtk_window_set_position :GtkObject :int)
(define-extern :int gtk_window_activate_focus :GtkObject)
(define-extern :int gtk_window_activate_default :GtkObject)
(define-extern :void gtk_window_set_modal :GtkObject :boolean)
(define-extern :void gtk_window_add_embedded_xid :GtkObject :int)
(define-extern :void gtk_window_remove_embedded_xid :GtkObject :int)
(define-extern :void gtk_window_reposition :GtkObject :int :int)
(define-extern :void gtk_window_set_transient_for :GtkObject :GtkObject)
(define-extern :void gtk_window_set_default_size :GtkObject :int :int)
;; (define-extern :void gtk_window_set_geometry_hints :GtkObject :GtkObject :?GdkGeometry*? :int)
;;
;; Unconverted types:
;;

;;  'GCompareFunc'		=> '',
;;  'GDestroyNotify'		=> '',
;;  'GHashTable*'		=> '',
;;  'GList*'		=> '',
;;  'GNode*'		=> '',
;;  'GQuark'		=> '',
;;  'GSList*'		=> '',
;;  'GSList**'		=> '',
;;  'GScanner*'		=> '',
;;  'GdkBitmap**'		=> '',
;;  'GdkDragAction'		=> '',
;;  'GdkDragProtocol'		=> '',
;;  'GdkEventProperty*'		=> '',
;;  'GdkEventSelection*'		=> '',
;;  'GdkExtensionMode'		=> '',
;;  'GdkGCValues*'		=> '',
;;  'GdkGCValuesMask'		=> '',
;;  'GdkGeometry*'		=> '',
;;  'GdkImage*'		=> '',
;;  'GdkImage**'		=> '',
;;  'GdkInputCondition'		=> '',
;;  'GdkInputFunction'		=> '',
;;  'GdkModifierType'		=> '',
;;  'GdkModifierType*'		=> '',
;;  'GdkPixmap**'		=> '',
;;  'GdkPoint*'		=> '',
;;  'GdkRectangle*'		=> '',
;;  'GdkRgbDither'		=> '',
;;  'GdkWindowHints'		=> '',
;;  'GtkAccelEntry*'		=> '',
;;  'GtkAccelFlags'		=> '',
;;  'GtkAllocation*'		=> '',
;;  'GtkAnchorType'		=> '',
;;  'GtkArg*'		=> '',
;;  'GtkArgInfo*'		=> '',
;;  'GtkArgInfo**'		=> '',
;;  'GtkArrowType'		=> '',
;;  'GtkAttachOptions'		=> '',
;;  'GtkBindingSet*'		=> '',
;;  'GtkButtonBoxStyle'		=> '',
;;  'GtkCListCompareFunc'		=> '',
;;  'GtkCTreeCompareDragFunc'		=> '',
;;  'GtkCTreeExpanderStyle'		=> '',
;;  'GtkCTreeFunc'		=> '',
;;  'GtkCTreeGNodeFunc'		=> '',
;;  'GtkCTreeLineStyle'		=> '',
;;  'GtkCalendarDisplayOptions'		=> '',
;;  'GtkCallback'		=> '',
;;  'GtkCallbackMarshal'		=> '',
;;  'GtkCellType'		=> '',
;;  'GtkCornerType'		=> '',
;;  'GtkCurveType'		=> '',
;;  'GtkDestDefaults'		=> '',
;;  'GtkDestroyNotify'		=> '',
;;  'GtkDirectionType'		=> '',
;;  'GtkEmissionHook'		=> '',
;;  'GtkEnumValue*'		=> '',
;;  'GtkFlagValue*'		=> '',
;;  'GtkFontFilterType'		=> '',
;;  'GtkFontType'		=> '',
;;  'GtkFunction'		=> '',
;;  'GtkImageLoader'		=> '',
;;  'GtkItemFactoryEntry*'		=> '',
;;  'GtkJustification'		=> '',
;;  'GtkKeySnoopFunc'		=> '',
;;  'GtkMenuDetachFunc'		=> '',
;;  'GtkMenuEntry*'		=> '',
;;  'GtkMenuFactory*'		=> '',
;;  'GtkMenuFactoryType'		=> '',
;;  'GtkMenuPath*'		=> '',
;;  'GtkMenuPositionFunc'		=> '',
;;  'GtkMetricType'		=> '',
;;  'GtkObjectClass*'		=> '',
;;  'GtkOrientation'		=> '',
;;  'GtkPackType'		=> '',
;;  'GtkPackType*'		=> '',
;;  'GtkPackerOptions'		=> '',
;;  'GtkPathPriorityType'		=> '',
;;  'GtkPathPriorityType*'		=> '',
;;  'GtkPathType'		=> '',
;;  'GtkPatternSpec*'		=> '',
;;  'GtkPolicyType'		=> '',
;;  'GtkPositionType'		=> '',
;;  'GtkPreviewInfo*'		=> '',
;;  'GtkPreviewType'		=> '',
;;  'GtkPrintFunc'		=> '',
;;  'GtkProgressBarOrientation'		=> '',
;;  'GtkProgressBarStyle'		=> '',
;;  'GtkRcStyle*'		=> '',
;;  'GtkReliefStyle'		=> '',
;;  'GtkRequisition*'		=> '',
;;  'GtkResizeMode'		=> '',
;;  'GtkScrollType'		=> '',
;;  'GtkSelectioData*'		=> '',
;;  'GtkSelectionData*'		=> '',
;;  'GtkSelectionMode'		=> '',
;;  'GtkShadowType'		=> '',
;;  'GtkSideType'		=> '',
;;  'GtkSignalDestroy'		=> '',
;;  'GtkSignalFunc'		=> '',
;;  'GtkSignalMarshal'		=> '',
;;  'GtkSignalMarshaller'		=> '',
;;  'GtkSignalQuery*'		=> '',
;;  'GtkSignalRunType'		=> '',
;;  'GtkSortType'		=> '',
;;  'GtkSpinButtonUpdatePolicy'		=> '',
;;  'GtkSpinType'		=> '',
;;  'GtkStateType'		=> '',
;;  'GtkStateType*'		=> '',
;;  'GtkSubmenuPlacement'		=> '',
;;  'GtkTargetEntry*'		=> '',
;;  'GtkTargetList*'		=> '',
;;  'GtkThemeEngine*'		=> '',
;;  'GtkToolbarChildType'		=> '',
;;  'GtkToolbarSpaceStyle'		=> '',
;;  'GtkToolbarStyle'		=> '',
;;  'GtkTooltipsData*'		=> '',
;;  'GtkTranslateFunc'		=> '',
;;  'GtkTreeViewMode'		=> '',
;;  'GtkType*'		=> '',
;;  'GtkTypeClass*'		=> '',
;;  'GtkTypeInfo*'		=> '',
;;  'GtkTypeObject*'		=> '',
;;  'GtkTypeQuery*'		=> '',
;;  'GtkUpdateType'		=> '',
;;  'GtkVisibility'		=> '',
;;  'GtkWidget**'		=> '',
;;  'GtkWindowPosition'		=> '',
;;  'GtkWindowType'		=> '',
;;  'char**'		=> '',
;;  'char***'		=> '',
;;  'gboolean*'		=> '',
;;  'gchar**'		=> '',
;;  'gdouble*'		=> '',
;;  'gfloat*'		=> '',
;;  'gint*'		=> '',
;;  'guint*'		=> '',
;;  'guint32**'		=> '',
;;  'guint8*'		=> '',
;;  'int*'		=> '',
;;  'va_list'		=> '',
