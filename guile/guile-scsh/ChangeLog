Mon Jan  6 05:00:19 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* network.scm (generic-receive-message!): use guile primitives.
	(receive-message!): minor change.
	(receive-message): use the SCSH definition.
	(generic-receive-mesage/partial, receive-message/partial,
	receive-message!/partial): similar.

	* init.scm: load rw.scm

	* rw.scm: copied from SCSH.

Sat Jan  4 02:48:02 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* init.scm (define-structure): simple substitute.

Sun Dec 29 08:12:10 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* let-opt.scm: new copy from SCSH.  replace :optional with optional.

Fri Dec 27 06:06:50 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* init.scm: remove integer->string.

Sat Dec 21 01:49:23 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* network.scm: (close-socket, bind-socket, create-socket,
	connect-socket, listen-socket, accept-connection,
	socket-remote-address, socket-local-address, shutdown-socket,
	create-socket-pair, receive-message: use Guile network primitives.
	(socket-address->list family address): new procedure.
	(make-addr): comment out.
	(address-vector->socket-address): new procedure.

Thu Dec 19 05:29:30 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* network.scm (internet-address->socket-address): store the
	address/port in a pair instead of packing them into a string.
	(socket-address->internet-address): equal and opposite change.
	(throughout): replace :optional with optional.
	(socket->port sock): replaces socket->fdes.

	* init.scm: define integer->string, load netconst.scm.
	define define-foreign, define-errno-syscall,
	define-record-dicloser (do nothing.)
	load network.scm.

Wed Dec 18 22:44:02 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* netconst.scm: new file, defines network constants.

Tue Dec 17 06:24:39 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* network.scm: copied from SCSH

	* init.scm: define foreign-source, does nothing.

	* init.scm: load syntax.scm instead of slib's macro-by-example.
	load defrec.scm.

	* defrec.scm: copied from SCSH.

	* syntax.scm: copied from SCSH.
	Redefine define-syntax and define syntax-error.  By some miracle
	it seems to work.

Mon Dec 16 05:53:43 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* receive.scm: copied from SCSH.

Fri Dec 13 04:53:50 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* utilities.scm (compose): uncomment.
	* init.scm (values): get call-with-values from slib.

Wed Dec 11 22:15:18 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* init.scm: define bitwise-not, bitwise-and, bitwise-ior, bitwise-xor.
	use slib's macro-by-example for define-syntax for now.
	load let-opt.scm and utilities.scm.

	* utilities.scm: replace usage of :optional with optional.
	comment out compose, haven't decided what to do with call-with-values.

	* let-opt.scm: comment out everything but the `optional'
 	macro, renamed from :optional.
	
	* COPYING, let-opt.scm, utilities.scm: from SCSH 0.4.4.
	* ChangeLog, INCOMPAT, init.scm: new files.
	* new directory.

