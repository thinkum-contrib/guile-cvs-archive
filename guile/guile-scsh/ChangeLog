Fri Jul 18 07:31:03 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* init.scm: load re.scm.
	* re.scm: delete everything except regexp-num-submatches.

Wed Jul 16 14:40:40 1997  Jim Blandy  <jimb@floss.red-bean.com>

	* Makefile.am: Install SCSH files in $(datadir)/guile, not in the
	version-specific directory.  I think SCSH shouldn't be tied to a
	specific version of Guile.
	* Makefile.in: Regenerated.

Sun Jun 15 06:06:58 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* configure.in: change the version to 1.2a so it will install
	in the right place (maybe).

	* README: now it's a port of scsh 0.5.1.

	* init.scm: don't include re.scm until Guile's interface is stable.

	* match:start, match:end, match:substring updated from scsh 0.5.1.
	regexp-substitute, regexp-substitute/global, regexp-num-submatches:
	new from scsh 0.5.1.

	* syscalls.scm (%filter-C-strings!): moved from re.scm, following
	scsh 0.5.1.

	* utilities.scm: new version from scsh 0.5.1, adds string-replace!,
	substring-replace!, string-reduce.

	* time.scm: minor changes for scsh 0.4.4 -> 0.5.1

	* rw.scm: delete y-or-n? and *y-or-n-eof-count* which have moved
	in scsh 0.5.1 (to scsh.scm, but we don't need them).

Tue May 13 11:59:28 1997  Jim Blandy  <jimb@floss.cyclic.com>

	* Makefile.in, aclocal.m4, configure: Regenerated using automake
	1.1p.

	Lie to automake in a different way, to get it to install things in
	the right place.
	* configure.in (AM_INIT_AUTOMAKE): Call the package guile-scsh,
	not guile; this determines the name of the disty.
	* Makefile.am (scshdir): Renamed from subpkgdatadir.  Use
	$(datadir)/guile instead of $(pkgdatadir), since the latter's
	value uses the package name given to AM_INIT_AUTOMAKE.
	(scsh_DATA): Renamed from subpkgdata_DATA.
	(EXTRA_DIST): Fix reference.
	* Makefile.in, configure: Regenerated.

	Make SCSH into a separate distribution.
	* README: Renamed from README.PORT.
	* configure.in: Use AM_INIT_AUTOMAKE, not AM_INIT_GUILE_MODULE.
	* Makefile.am: Don't use @module@ to decide where to install
	things.  No need to mention README.PORT; automake will grab it
	automatically now, since it's named README.  Don't try to
	distribute the PLUGIN stuff.
	* INSTALL: New file; stock text.
	* install-sh, missing, mkinstalldirs: New files, used by
	automake-generated makefiles.
	* configure, Makefile.in, aclocal.m4: Regenerated.

Sat Apr 26 03:16:18 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* time.scm (format-date): Uncommented and rewritten.

Fri Apr 11 08:15:40 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* rdelim.scm: uncomment skip-char-set.

	* Makefile.am (subpkgdata_DATA): add fr.scm.
	* init.scm: load fr.scm.
	* fr.scm: copied from scsh.

Mon Apr  7 08:23:03 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* time.scm (date, time): fixed and uncommented.

Sat Apr  5 06:44:32 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* time.scm (ticks/sec): define, always 1000000.
	(time+ticks): use gettimeofday.

	* Makefile.am (subpkgdata_DATA): add time.scm.
	* init.scm: load time.scm.  require 'format from slib.

Tue Apr  1 23:19:08 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* time.scm: copied from scsh and modified to use Guile primitives.

Mon Mar 31 02:24:25 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* rdelim.scm: uncomment read-paragraph.

	* Makefile.am (subpkgdata_DATA): add re.scm.
	* init.scm: load re.scm.
	* re.scm: copied from scsh and modified to use Guile regular
	expressions.

Tue Mar 25 04:28:51 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* syscalls.scm (name->user-info, uid->user-info): defined, needed
	by fname.scm.

	* Makefile.am (subpkgdata_DATA): add fname.scm, syscalls.scm, scsh.scm.

	* init.scm: load fname.scm, scsh.scm and call init-scsh-vars.

	* scsh.scm: new file, list manipulation and global variable init
	parts from scsh.

	* fname.scm: copied from scsh.

	* init.scm (wait/poll, wait/stopped-children): defined, all that's
	needed from waitcodes.scm.

Wed Mar 19 04:55:51 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* syscalls.scm: define user-info record and procedures user-info,
	->uid, ->username, %homedir.
	define group-info record and procedures group-info, ->gid, ->groupname.

Mon Mar 17 19:40:45 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* init.scm: load syscalls.scm.
	* syscalls.scm: new file.  Will not include all of the contents
	of scsh's syscalls.scm.

Tue Mar 11 04:09:55 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* (let-opt.scm, utilities.scm): revert to scsh's versions, no longer
	renaming :optional.
	(rw.scm, network.scm): change optional back to :optional.

Mon Feb 24 21:47:59 1997  Mikael Djurfeldt  <mdj@mdj.nada.kth.se>

	* configure.in: Added AM_MAINTAINER_MODE

Fri Jan 31 04:36:42 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* init.scm: use use-modules instead of define-module to access slib.

Sat Jan 25 01:03:03 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* init.scm: load char-set.scm and rdelim.scm.
	* Makefile.am (subpkgdata_DATA): add char-set.scm and rdelim.scm.

	* rdelim.scm: new file from scsh.  Some procedures have been
 	implemented in libguile/ice-9 (based on the scsh interfaces), so
 	the versions here just modify them to use scsh char-sets and
 	multiple values.

	* rw.scm (generic-read-string!/partial, generic-read-string!,
	generic-write-string/partial, generic-write-string: adapt
	to change in uniform-array-read/write arguments.

	* network.scm (generic-receive-message!, 
	generic-receive-message!/partial): adapt to changes in recvfrom!
	primitive.

	* char-set.scm: new file from scsh.

Mon Jan 20 01:12:38 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* Makefile.am, Makefile.in, PLUGIN/OPT, README.PORT, configure.in,
	configure, aclocal.m4: new files.

	* network.scm (generic-receive-message!/partial): catch sytem-error
	and check for errno/wouldblock or errno/again.

Sat Jan 18 00:52:14 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* init.scm (index, rindex): replace versions in utilities.scm with
	primitives.
	load errno.scm.

	* rw.scm: globally replace :optional with optional.
	comment out y-or-n? and *y-or-n-eof-count*.
	(read-string!/partial, generic-read-string!/partial,
	generic-read-string!, read-string!, generic-write-string/partial,
	write-string/partial, generic-write-string, write-string):
	use guile primitives.

	* netconst.scm: undefine maybe-define and maybe-define-so after use.
	* errno.scm: new file.

Wed Jan  8 02:32:56 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* init.scm (ascii->char, char->ascii) defined.

	* netconst.scm (maybe-define-so): new macro.  use it to define
	socket option constants.
	remove a few SO_ types which don't appear in scsh's netconst.scm.
	define variables options/boolean etc.

	* network.scm: socket-address->list: new procedure.
	(generic-send-message, generic-send-message/partial, socket-option,
	set-socket-option, address->host-info, name->host-info,
	address->network-info, name->network-info, port->service-info,
	name->service-info, number->protocol-info, name->protocol-info):
	use guile primitives.
	(send-message, send-message/partial): minor modifications.
	comment out C-long-vec->Scheme, integer->string, string->integer.

Mon Jan  6 05:00:19 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* network.scm (generic-receive-message!): use guile primitives.
	(receive-message!): minor change.
	(receive-message): use the scsh definition.
	(generic-receive-mesage/partial, receive-message/partial,
	receive-message!/partial): similar.

	* init.scm: load rw.scm

	* rw.scm: copied from scsh.

Sat Jan  4 02:48:02 1997  Gary Houston  <ghouston@actrix.gen.nz>

	* init.scm (define-structure): simple substitute.

Sun Dec 29 08:12:10 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* let-opt.scm: new copy from scsh.  replace :optional with optional.

Fri Dec 27 06:06:50 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* init.scm: remove integer->string.

Sat Dec 21 01:49:23 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* network.scm: (close-socket, bind-socket, create-socket,
	connect-socket, listen-socket, accept-connection,
	socket-remote-address, socket-local-address, shutdown-socket,
	create-socket-pair, receive-message: use Guile network primitives.
	(socket-address->list family address): new procedure.
	(make-addr): comment out.
	(address-vector->socket-address): new procedure.

Thu Dec 19 05:29:30 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* network.scm (internet-address->socket-address): store the
	address/port in a pair instead of packing them into a string.
	(socket-address->internet-address): equal and opposite change.
	(throughout): replace :optional with optional.
	(socket->port sock): replaces socket->fdes.

	* init.scm: define integer->string, load netconst.scm.
	define define-foreign, define-errno-syscall,
	define-record-dicloser (do nothing.)
	load network.scm.

Wed Dec 18 22:44:02 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* netconst.scm: new file, defines network constants.

Tue Dec 17 06:24:39 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* network.scm: copied from scsh

	* init.scm: define foreign-source, does nothing.

	* init.scm: load syntax.scm instead of slib's macro-by-example.
	load defrec.scm.

	* defrec.scm: copied from scsh.

	* syntax.scm: copied from scsh.
	Redefine define-syntax and define syntax-error.  By some miracle
	it seems to work.

Mon Dec 16 05:53:43 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* receive.scm: copied from scsh.

Fri Dec 13 04:53:50 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* utilities.scm (compose): uncomment.
	* init.scm (values): get call-with-values from slib.

Wed Dec 11 22:15:18 1996  Gary Houston  <ghouston@actrix.gen.nz>

	* init.scm: define bitwise-not, bitwise-and, bitwise-ior, bitwise-xor.
	use slib's macro-by-example for define-syntax for now.
	load let-opt.scm and utilities.scm.

	* utilities.scm: replace usage of :optional with optional.
	comment out compose, haven't decided what to do with call-with-values.

	* let-opt.scm: comment out everything but the `optional'
 	macro, renamed from :optional.
	
	* COPYING, let-opt.scm, utilities.scm: from scsh 0.4.4.
	* ChangeLog, INCOMPAT, init.scm: new files.
	* new directory.

