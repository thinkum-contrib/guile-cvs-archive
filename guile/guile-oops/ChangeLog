1998-11-25  Mikael Djurfeldt  <mdj@mdj.nada.kth.se>

	* goops/goops.scm (*unbound*, make-unbound, unbound?): Replaced by
	primitives.
	(compute-get-n-set): Use an ordinary scheme variable for slots
	with class and each-subclass allocation.

	* goops.c (SCM_GOOPS_UNBOUND, SCM_GOOPS_UNBOUNDP): New macros:
	Implements an unbound value internal to goops.  We can't use
	SCM_UNDEFINED since that value can't be handled by scheme code;
	Replaced SCM_UNDEFINED --> SCM_UNBOUNDP and SCM_UNBNDP -->
	SCM_GOOPS_UNBOUNDP on suitable places.
	(scm_goops_the_unbound_value): Holds the unbound value.
	(Later we may choose to implement this as an ISYM or for
	efficiency.)
	(scm_init_goops): Initialize the unbound value.
	(scm_make_unbound, scm_unbound_p): New primitives.

1998-11-24  Mikael Djurfeldt  <mdj@mdj.nada.kth.se>

	* goops/goops.scm: Added <complex> to list of print slot
	initializations.
	(compute-getters-n-setters): Use `(procedure-property <proc> 'arity)'
	instead of `%procedure-arity' in `verify-accessors'.

	* goops.c (scm_class_of): Use TEST_CHANGE_CLASS to check for class
	redefinition if argument is a goops instance.

	* goops/goops.scm (ensure-class): Handle supers passed as
	meta-objects.

	* goops.c (set_slot_value_if_unbound): Apply init closure to an
	empty list, not a list containing an empty list.

	* Makefile.am (install-exec-hook): Do test -r instead of test -e
	in order to be backward compatible.

1998-11-24  Mikael Djurfeldt  <mdj@barbara.nada.kth.se>

	* Makefile.am (install-exec-hook): Don't exit with an error if we
	haven't created libgoops.so.0

1998-11-23  Mikael Djurfeldt  <mdj@barbara.nada.kth.se>

	* goops/goops.scm: Removed module workaround; Added :use-module on
	the module itself to load object code (which was what the
	workaround did);  Export public primitives defined by the object
	code.

	* goops.h: Added declaration of scm_init_goops_goops_module.

	* goops.c: Use new C level module interface <libguile/modules.h>
	to define and get bindings in the correct module.  (Now the full
	MOP should work!)

	* guile-oops.c: Call scm_init_goops_goops_module instead of
	scm_init_goops in order to postpone module creation until
	requested.
	
	* configure.in: Use aggressive warning messages if CC=gcc.

1998-11-22  Mikael Djurfeldt  <mdj@barbara.nada.kth.se>

	* goops.c: Added #include <libguile/modules.h>
	(scm_init_goops): Use the new C interface to modules.

1998-11-22  Mikael Djurfeldt  <mdj@kenneth>

	* Makefile.am (install-exec-hook): Added: Puts symbolic links to
	the dynamically linked library into the goops module directory.

	* configure.in: Removed unneccesary lines; Added AC_PROG_LN_S.

	* goops/goops.scm: Added workaround so that compiled code and
	interpreted code can coexist in the same module.

1998-11-22  Mikael Djurfeldt  <mdj@barbara.nada.kth.se>

	* goops.h, goops.c: New files.  Port of stklos from STk-3.99.3

	* goops: New directory: Contains the scheme part of stklos.
	
