(load "lightning.scm")
(use-modules (lightning))

(define (fib n)
  (if (< n 2)
      1
      (+ (fib (- n 1)) (fib (- n 2)))))

(define asm-fib (assemble `(fib
			      (prolog 1)
			      (arg n)
			      (getarg v0 n)
			      (prepare 2)
			      (mov r0 (scm 2))
			      (pusharg r0)
			      (pusharg v0)
			      (finish (subr "less_p"))
			      (retval r0)
			      (beq l0 r0 (scm #f))
			      (mov ret (scm 1))
			      (ret)
			    l0
			      (prepare 2)
			      (mov r0 (scm 2))
			      (pusharg r0)
			      (pusharg v0)
			      (finish (subr "difference"))
			      (retval r0)
			      (prepare 1)
			      (pusharg r0)
			      (finish (label fib))
			      (retval v2)
			      (prepare 2)
			      (mov r0 (scm 1))
			      (pusharg r0)
			      (pusharg v0)
			      (finish (subr "difference"))
			      (retval r0)
			      (prepare 1)
			      (pusharg r0)
			      (finish (label fib))
			      (retval v1)
			      (prepare 2)
			      (pusharg v2)
			      (pusharg v1)
			      (finish (subr "sum"))
			      (retval ret)
			      (ret))))

(define asm-fixfib (assemble `(fib
			         (prolog 1)
				 (arg n)
				 (getarg v0 n)
				 (bge l0 v0 (scm 2))
				 (mov ret (scm 1))
				 (ret)
			       l0
				 (sub r0 v0 (scm 2))
				 (add r0 r0 (scm 0))
				 (prepare 1)
				 (pusharg r0)
				 (finish (label fib))
				 (retval v2)
				 (sub r0 v0 (scm 1))
				 (add r0 r0 (scm 0))
				 (prepare 1)
				 (pusharg r0)
				 (finish (label fib))
				 (retval v1)
				 (sub ret v2 (scm 0))
				 (add ret ret v1)
				 (ret))))

;(disassemble asm-fib)

(assert-repl-verbosity #t)
